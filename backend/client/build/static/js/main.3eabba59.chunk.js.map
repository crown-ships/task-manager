{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","auth/Login.js","components/sections/listitem.js","actions/taskActions.js","actions/featureActions.js","actions/projectActions.js","actions/companyActions.js","components/controls/ActionButton.js","components/controls/Button.js","components/controls/Input.js","components/elements/ConfirmDialog.js","components/elements/Notification.js","components/elements/Popup.js","components/sections/useForm.js","components/sections/companies/Forms/updateCompanyForm.js","components/sections/useTable.js","components/sections/companies/Forms/registerCompanyForm.js","components/sections/companies/CompaniesTable.js","components/sections/companies/CompaniesPage.js","components/sections/projects/forms/updateProjectForm.js","components/sections/projects/forms/registerProjectForm.js","components/sections/projects/tables/projects/UP_Table.js","components/sections/projects/tables/projects/AP_Table.js","components/sections/projects/pickers/ProjectTablePicker.js","components/sections/projects/forms/updateFeatureForm.js","components/sections/projects/forms/registerFeatureForm.js","components/sections/projects/tables/features/UF_Table.js","components/sections/projects/tables/features/AF_Table.js","components/sections/projects/pickers/FeatureTablePicker.js","components/sections/projects/forms/updateTaskForm.js","components/sections/projects/forms/registerTaskForm.js","components/sections/projects/tables/tasks/UT_Table.js","components/sections/projects/tables/tasks/AT_Table.js","components/sections/projects/pickers/TaskTablePicker.js","components/sections/projects/ProjectsPage.js","components/controls/RadioGroup.js","components/sections/users/Forms/UpdateForm.js","components/sections/users/Forms/RegisterForm.js","components/sections/users/UsersTable.js","components/sections/users/UsersPage.js","actions/userActions.js","actions/vendorActions.js","actions/paymentActions.js","components/sections/vendors/forms/updateVendorForm.js","components/sections/vendors/forms/registerVendorForm.js","components/sections/vendors/tables/vendors/UV_Table.js","components/sections/vendors/tables/vendors/AV_Table.js","components/sections/vendors/pickers/VendorTablePicker.js","components/sections/vendors/forms/updatePaymentForm.js","components/sections/vendors/forms/registerPaymentForm.js","components/sections/vendors/tables/payments/APay_Table.js","components/sections/vendors/pickers/PaymentTablePicker.js","components/sections/vendors/tables/logs/AL_Table.js","components/sections/vendors/pickers/LogTablePicker.js","components/sections/vendors/VendorsPage.js","actions/investmentActions.js","actions/investorActions.js","components/sections/investments/forms/updateInvestmentForm.js","components/sections/investments/forms/registerInvestmentForm.js","components/sections/investments/tables/investments/UI_Table.js","components/sections/investments/tables/investments/AI_Table.js","components/sections/investments/pickers/InvestmentTablePicker.js","components/sections/investments/tables/returns/AR_Table.js","components/sections/investments/pickers/ReturnTablePicker.js","components/sections/investments/tables/logs/AL_Table.js","components/sections/investments/pickers/LogTablePicker.js","components/sections/investments/forms/updateInvestorForm.js","components/sections/investments/forms/registerInvestorForm.js","components/sections/investments/tables/investors/UInv_Table.js","components/sections/investments/tables/investors/AInv_Table.js","components/sections/investments/pickers/InvestorTablePicker.js","components/sections/investments/InvestmentsPage.js","actions/returnActions.js","components/sections/approval/forms/rejectForm.js","components/sections/approval/tables/ProjectApprovalTable.js","components/sections/approval/tables/InvestorApprovalTable.js","components/sections/approval/tables/InvestmentApprovalTable.js","components/sections/approval/tables/VendorApprovalTable.js","components/sections/approval/tables/PaymentApprovalTable.js","components/sections/approval/ApprovalPage.js","components/sections/rejection/tables/ProjectRejectionTable.js","components/sections/rejection/tables/InvestorRejectionTable.js","components/sections/rejection/tables/InvestmentRejectionTable.js","components/sections/rejection/tables/VendorRejectionTable.js","components/sections/rejection/tables/PaymentRejectionTable.js","components/sections/rejection/RejectionPage.js","privateRoute/PrivateRoute.js","components/sections/dashboard/Graphs.js","components/sections/dashboard/DashboardPage.js","App.jsx","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","authReducer","state","action","errorReducer","rootReducer","combineReducers","auth","errors","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","Copyright","Typography","variant","color","align","href","Date","getFullYear","Login","email","password","changeEmail","bind","changePassword","onSubmit","this","props","history","push","nextProps","setState","event","target","value","preventDefault","loginUser","theme","createMuiTheme","image","backgroundImage","backgroundColor","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","link","Grid","container","component","style","height","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","onChange","autoFocus","FormControlLabel","control","Checkbox","Button","Box","mt","Component","connect","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","mainListItems","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","secondaryListItems","updateTask","body","params","console","log","deleteTask","delete","getAllTasks","get","updateAllTasks","registerTask","updateFeature","deleteFeature","getAllFeatures","updateAllFeatures","registerFeature","updateProject","deleteProject","getAllProjects","registerProject","getAllCompanies","useStyles","makeStyles","root","minWidth","secondary","palette","light","main","ActionButton","children","onClick","classes","className","textTransform","text","size","other","Input","error","helperText","dialog","padding","position","top","dialogTitle","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","cursor","fontSize","ConfirmDialog","confirmDialog","setConfirmDialog","Dialog","open","isOpen","DialogTitle","IconButton","disableRipple","DialogContent","title","subTitle","DialogActions","onConfirm","Notification","notify","setNotify","handleClose","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialogWrapper","paddingRight","Popup","openPopup","setOpenPopup","maxWidth","flexGrow","dividers","useForm","initialFValues","validateOnChange","validate","useState","values","setValues","setErrors","handleInputChange","e","resetForm","Form","contactNo","websiteURL","UpdateForm","addOrEdit","recordForEdit","fieldValues","temp","Object","every","x","useEffect","input","edit","table","fontWeight","UseTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","map","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","companyName","RegisterForm","create","createData","website","contact","actions","enable","pageContent","searchInput","newButton","right","seeMore","rows","CompaniesTable","React","items","setFilterFn","setData","setRecordForEdit","openEditPopup","setOpenEditPopup","openRegPopup","setOpenRegPopup","setRecords","prop","d","changeEnable","og_id","idupdate","enabled","p_input","companyID","updateCompany","updateAllProjects","Fragment","Toolbar","InputProps","startAdornment","InputAdornment","Search","filter","toLowerCase","includes","startIcon","TableBody","row","Switch","val","_id","handleChange","checked","inputProps","company","emailDelete","role","deleteCompany","onDelete","og_email","emailupdate","registerCompany","toolbar","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","btnstyle","withRouter","itemList","setOpen","clsx","AppBar","edge","aria-label","noWrap","Drawer","Divider","List","Container","pt","projectDetails","dueDate","ownerName","approved","defaultValue","InputLabelProps","shrink","projectName","i","companyDetails","allCompanies","creatorName","creatorID","CircularProgressWithLabel","CircularProgress","left","bottom","Math","round","date","details","createdBy","update","del","formControl","percentComplete","updated","UP_Table","list","setList","setCompany","setAllCompanies","complist","len","trimlist","j","selList","key","checkedA","checkedB","dateToString","toString","substring","indexOf","FormControl","InputLabel","htmlFor","Select","native","age","disabled","status","projectID","AP_Table","handleSwitch","project","ProjectTablePicker","featureDetails","featureName","allProjects","app","green","yellow","UF_Table","getData","AF_Table","setProject","setAllProjects","features","pID","progress","sum","labels","unique","v","projectProgress","k","feature","featureID","FeatureTablePicker","taskName","taskDetails","allFeatures","getDropdownList","AT_Table","setAllFeatures","setFeature","tasks","fID","featureProgress","task","taskID","TaskTablePicker","TabPanel","hidden","aria-labelledby","p","a11yProps","setValue","Tabs","centered","newValue","Tab","RadioGroup","FormLabel","Radio","roleItems","password2","createdByName","dateCreated","UserTable","getAllUsers","deleteUser","og_role","updateUser","registerUser","updateVendor","deleteVendor","getAllVendors","registerVendor","updatePayment","deletePayment","getAllPayments","registerPayment","vendorEmail","contractAmt","endDate","pendingAmt","vendorName","startDate","UV_Table","vendorID","AV_Table","updateAllPayments","vendor","VendorTablePicker","paymentName","amtToBePaid","vendorDetails","allVendors","setAllVendors","setVendor","isPaid","paymentID","onPaid","payment","PaymentTablePicker","LogTablePicker","updateInvestment","deleteInvestment","getAllInvestments","registerInvestment","updateInvestor","deleteInvestor","getAllInvestors","registerInvestor","capitalPaid","investmentName","profitPercent","capitalAmt","investmentType","paymentTerms","investorDetails","allInvestors","investorName","investor","investorID","setInvestor","setAllInvestors","investmentID","investment","date1","months","d1","d2","getMonth","monthDiff","divider","totalInterestAmt","returnAmt","localDueDate","registerReturn","noOfPayments","setMonth","createReturns","InvestmentTablePicker","returnName","returnDetails","AR_Table","getAllReturns","returnID","updateReturn","returns","deleteReturn","ReturnTablePicker","investmentDetails","setInvestment","investorEmail","UInv_Table","AInv_Table","InvestorTablePicker","rejectReason","RejectForm","recordForReject","reject","ProjectApprovalTable","openRejectPopup","setOpenRejectPopup","onReject","onApprove","InvestorApprovalTable","InvestmentApprovalTable","investmenttID","VendorApprovalTable","PaymentApprovalTable","og_projectName","VendorRejectionTable","rest","render","getProjects","isAuthenticed","Graphs","max","valueField","argumentField","jwtToken","currentTime","now","exp","location","App","exact","path","Projects","Investments","Vendors","Dashboard","Companies","Users","Approval","Rejection","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3eabba59.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/signup\", userData)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      history.push(\"/users\"\r\n)}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","import {\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default errorReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\n\r\nconst rootReducer =  combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n  )\r\n);\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { loginUser } from \"../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      email:'',\r\n      password:'',\r\n      errors: {}\r\n    };\r\n\r\n    this.changeEmail = this.changeEmail.bind(this);\r\n    this.changePassword = this.changePassword.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n  // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/projects\");\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/projects\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n        this.setState({\r\n          errors: nextProps.errors\r\n        });\r\n      }\r\n    }\r\n\r\n  changeEmail(event){\r\n    this.setState({\r\n      email:event.target.value\r\n    });\r\n  }\r\n\r\n  changePassword(event){\r\n    this.setState({\r\n      password:event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event){\r\n    event.preventDefault();\r\n\r\n    const auth = {\r\n      email:this.state.email,\r\n      password:this.state.password\r\n    };\r\n    this.props.loginUser(auth);\r\n    // axios.post('http://localhost:4000/api/login', auth)\r\n    // .then(resp => console.log(resp.data));\r\n\r\n    this.setState({\r\n      email:'',\r\n      password:''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const theme = createMuiTheme();\r\n    const { errors } = this.state;\r\n    const root =  {\r\n      height: '100vh',\r\n    };\r\n    const image= {\r\n      backgroundImage: 'linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%)',\r\n      backgroundColor: \"#E6E6FA\",\r\n      backgroundSize: '20px',\r\n      backgroundPosition: 'center'\r\n    };\r\n    const paper= {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n    };\r\n    const avatar= {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"black\"\r\n    };\r\n    const form= {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1)\r\n    };\r\n    const submit= {\r\n      color:\"white\",\r\n      backgroundColor: \"black\",\r\n      margin: theme.spacing(3, 0, 2)\r\n    };\r\n    const link= {\r\n      color: \"black\"\r\n    };\r\n\r\n    return(\r\n      <Grid container component=\"main\" style={root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={4} style={image} />\r\n        <Grid item xs={12} sm={4} md={4} component={Paper} elevation={6} square>\r\n          <div style={paper}>\r\n            <Avatar style={avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form style={form} noValidate onSubmit={this.onSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={this.changeEmail}\r\n                value={this.state.email}\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.changePassword}\r\n                value={this.state.password}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\" style={link}>\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" variant=\"body2\" style={link}>\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                <Copyright />\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={false} sm={4} md={4} style={image} />\r\n      </Grid>\r\n    );\r\n\r\n}\r\n}\r\n\r\nLogin.propTypes = {\r\nloginUser: PropTypes.func.isRequired,\r\nauth: PropTypes.object.isRequired,\r\nerrors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\nauth: state.auth,\r\nerrors: state.errors\r\n});\r\nexport default connect(\r\nmapStateToProps,\r\n{ loginUser }\r\n)(Login);\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button component={Link} to=\"/dashboard\">\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/projects\">\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Projects\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/approval\">\r\n      <ListItemIcon>\r\n        <CheckCircleOutlineIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Approval\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/rejection\">\r\n      <ListItemIcon>\r\n        <CancelIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Rejection\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/companies\">\r\n      <ListItemIcon>\r\n        <BusinessIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Companies\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/investments\">\r\n      <ListItemIcon>\r\n        <MonetizationOnIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Investments\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/vendors\">\r\n      <ListItemIcon>\r\n        <ContactsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Vendors\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/users\">\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Users\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n  <ListItem button component={Link} to=\"/dashboard\">\r\n    <ListItemIcon>\r\n      <DashboardIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Dashboard\" />\r\n  </ListItem>\r\n  <ListItem button component={Link} to=\"/projects\">\r\n    <ListItemIcon>\r\n      <AssignmentIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Projects\" />\r\n  </ListItem>\r\n  <ListItem button component={Link} to=\"/investments\">\r\n    <ListItemIcon>\r\n      <MonetizationOnIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Investments\" />\r\n  </ListItem>\r\n  <ListItem button component={Link} to=\"/vendors\">\r\n    <ListItemIcon>\r\n      <ContactsIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Vendors\" />\r\n  </ListItem>\r\n  <ListItem button component={Link} to=\"/rejection\">\r\n    <ListItemIcon>\r\n      <CancelIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Rejection\" />\r\n  </ListItem>\r\n  </div>\r\n);\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateTask = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updTask\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteTask = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delTask\", {params:userData})\r\n    .then(res => history.push(\"/projects\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllTasks = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getTasks\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const updateAllTasks = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updAllTasks\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const registerTask = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newTask\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/Tasks\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateFeature = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updFeature\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteFeature = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delFeature\", {params:userData})\r\n    .then(res => history.push(\"/projects\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllFeatures = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getFeatures\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const updateAllFeatures = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updAllFeatures\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const registerFeature = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newFeature\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/features\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateProject = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updProject\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateAllProjects = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updAllProjects\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteProject = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delProject\", {params:userData})\r\n    .then(res => history.push(\"/projects\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllProjects = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getProjects\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const registerProject = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newProject\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/projects\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateCompany = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updCompany\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteCompany = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delCompany\", {params:userData})\r\n    .then(res => history.push(\"/companies\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllCompanies = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getCompanies\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const registerCompany = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newCompany\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      history.push(\"/companies\"\r\n)}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value,error=null, onChange, ...other } = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Button from \"../controls/Button\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { Snackbar, makeStyles } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n      top: theme.spacing(9)\r\n  }\r\n}))\r\n\r\nexport default function Notification(props) {\r\n\r\n  const { notify, setNotify } = props;\r\n  const classes = useStyles()\r\n\r\n  const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n          return;\r\n      }\r\n      setNotify({\r\n          ...notify,\r\n          isOpen: false\r\n      })\r\n  }\r\n\r\n  return (\r\n      <Snackbar\r\n          className={classes.root}\r\n          open={notify.isOpen}\r\n          autoHideDuration={3000}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          onClose={handleClose}>\r\n          <Alert\r\n              severity={notify.type}\r\n              onClose={handleClose}>\r\n              {notify.message}\r\n          </Alert>\r\n      </Snackbar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport ActionButton from \"../controls/ActionButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n    contactNo: '',\r\n    email: '',\r\n    websiteURL: ''\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    console.log(recordForEdit);\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const input = {\r\n              contactNo: values.contactNo,\r\n              email: values.email,\r\n              websiteURL: values.websiteURL\r\n            };\r\n            console.log(input);\r\n            props.edit(input, resetForm, recordForEdit.email);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"email\"\r\n                        label=\"Email Address\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Input\r\n                        name=\"websiteURL\"\r\n                        label=\"Website\"\r\n                        value={values.websiteURL}\r\n                        onChange={handleInputChange}\r\n                        error={errors.websiteURL}\r\n                    />\r\n                    <Input\r\n                        name=\"contactNo\"\r\n                        label=\"Contact Info\"\r\n                        value={values.contactNo}\r\n                        onChange={handleInputChange}\r\n                        error={errors.contactNo}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: '#ffffff',\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        '& tbody td': {\r\n            fontWeight: '300',\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function UseTable(records, headCells,filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [5, 10, 25]\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\r\n    const [order, setOrder] = useState()\r\n    const [orderBy, setOrderBy] = useState()\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId)\r\n        }\r\n\r\n        return (<TableHead>\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                        <TableCell key={headCell.id}\r\n                            sortDirection={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disableSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n    }\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n    companyName: '',\r\n    email: '',\r\n    websiteURL: '',\r\n    contactNo: ''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const input = {\r\n              companyName: values.companyName,\r\n              email: values.email,\r\n              websiteURL: values.websiteURL,\r\n              contactNo: values.contactNo\r\n            };\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={9}>\r\n                    <Input\r\n                        name=\"companyName\"\r\n                        label=\"Company Name\"\r\n                        value={values.companyName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.companyName}\r\n                    />\r\n                    <Input\r\n                        name=\"email\"\r\n                        label=\"Email Address\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Input\r\n                        name=\"websiteURL\"\r\n                        label=\"Website\"\r\n                        value={values.websiteURL}\r\n                        onChange={handleInputChange}\r\n                        error={errors.websiteURL}\r\n                    />\r\n                    <Input\r\n                        name=\"contactNo\"\r\n                        label=\"Contact Info\"\r\n                        value={values.contactNo}\r\n                        onChange={handleInputChange}\r\n                        error={errors.contactNo}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../controls/ActionButton\"\r\nimport Button from \"../../controls/Button\"\r\nimport Input from \"../../controls/Input\"\r\nimport ConfirmDialog from \"../../elements/ConfirmDialog\"\r\nimport Notification from \"../../elements/Notification\"\r\nimport Popup from \"../../elements/Popup\"\r\nimport UpdateForm from \"./Forms/updateCompanyForm\"\r\nimport UseTable from \"../useTable\"\r\nimport RegisterForm from \"./Forms/registerCompanyForm\"\r\n// Generate Order Data\r\nfunction createData(name, email, website, contact, actions,enable) {\r\n  return { name, email, website, contact, actions,enable};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'companyName', label: 'Company' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'websiteURL', label: 'Website' },\r\n    { id: 'contactNo', label: 'Contact Info'},\r\n    { id: 'actions', label: 'Enable', disableSorting: true },\r\n    { id: 'status', label: 'Actions', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllCompanies({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nexport default function CompaniesTable(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    console.log(data);\r\n  },[notify]);\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.companyName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n\r\n  const handleChange = (val, row) => {\r\n    console.log(val);\r\n      if(val== true)\r\n        changeEnable(\"true\",row._id);\r\n      if(val == false)\r\n        changeEnable(\"false\",row._id);\r\n  };\r\n\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerCompany(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const changeEnable = (value, og_id) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        idupdate: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n      enabled: value\r\n      }\r\n    };\r\n\r\n    const p_input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        companyID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        enabled: value\r\n      }\r\n    };\r\n\r\n\r\n    props.updateCompany(input, props.history);\r\n    props.updateAllProjects(p_input, props.history);\r\n    props.updateAllFeatures(p_input, props.history);\r\n    props.updateAllTasks(p_input, props.history);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Success.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const edit = (data, resetForm, og_email) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        emailupdate: og_email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateCompany(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = company => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      emailDelete: company.email,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteCompany(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Input\r\n            label=\"Search Companies\"\r\n            className={classes.searchInput}\r\n            InputProps={{\r\n                startAdornment: (<InputAdornment position=\"start\">\r\n                    <Search />\r\n                </InputAdornment>)\r\n            }}\r\n            onChange={handleSearch}\r\n        />\r\n        <Button\r\n            text=\"Add New\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            className={classes.newButton}\r\n            onClick={() => { setOpenRegPopup(true); }}\r\n        />\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.companyName}</TableCell>\r\n                <TableCell>{row.email}</TableCell>\r\n                <TableCell>{row.websiteURL}</TableCell>\r\n                <TableCell>{row.contactNo}</TableCell>\r\n                <TableCell>\r\n                  <Switch\r\n                    onChange={(e,val)=>handleChange(val, row)}\r\n                    color=\"primary\"\r\n                    name=\"checked\"\r\n                    checked={(row.enabled===\"true\")}\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"primary\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                  <ActionButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Company Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Company\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems} from '../listitem';\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport { updateAllTasks } from \"../../../actions/taskActions\";\r\nimport { updateAllFeatures } from \"../../../actions/featureActions\";\r\nimport { updateAllProjects } from \"../../../actions/projectActions\";\r\nimport { getAllCompanies, deleteCompany, updateCompany, registerCompany } from \"../../../actions/companyActions\";\r\nimport CompaniesTable from \"./CompaniesTable\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\nfunction onLogoutClick(e) {\r\n  e.preventDefault();\r\n  this.props.logoutUser();\r\n}\r\n\r\nconst CompaniesPage =  (props) => {\r\n\r\n  var itemList = \"\";\r\n  itemList = mainListItems;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Companies\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <CompaniesTable {...props}/>\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nCompaniesPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getAllCompanies, deleteCompany, updateCompany, registerCompany,updateAllFeatures,updateAllTasks, updateAllProjects }\r\n)(withRouter(CompaniesPage));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n    projectDetails: '',\r\n    dueDate: '',\r\n    ownerName: ''\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              projectDetails: values.projectDetails,\r\n              dueDate: values.dueDate,\r\n              ownerName: values.ownerName,\r\n              approved: approved\r\n          };\r\n          props.edit(input, resetForm, props.recordForEdit._id);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.recordForEdit != null)\r\n            setValues({\r\n                ...props.recordForEdit\r\n            })\r\n    }, [props.recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"projectDetails\"\r\n                        label=\"Project Details\"\r\n                        value={values.projectDetails}\r\n                        onChange={handleInputChange}\r\n                        error={errors.projectDetails}\r\n                    />\r\n                    <Input\r\n                        name=\"ownerName\"\r\n                        label=\"Owner Name\"\r\n                        value={values.ownerName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.ownerName}\r\n                    />\r\n                    <Input\r\n                      id=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue=\"2017-05-24\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dueDate\"\r\n                      label=\"Due Date\"\r\n                      value={values.dueDate}\r\n                      onChange={handleInputChange}\r\n                      error={errors.dueDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n    projectName: '',\r\n    projectDetails: '',\r\n    dueDate: '',\r\n    ownerName: ''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    var i;\r\n    var companyDetails = {};\r\n    for(i=0; i< props.allCompanies.length; i++) {\r\n      if(props.allCompanies[i].companyName === props.company)\r\n        companyDetails = props.allCompanies[i];\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              companyName: companyDetails.companyName,\r\n              companyID: companyDetails._id,\r\n              creatorName: props.auth.user.name,\r\n              creatorID: props.auth.user.id,\r\n              projectName: values.projectName,\r\n              projectDetails: values.projectDetails,\r\n              ownerName: values.ownerName,\r\n              dueDate: values.dueDate,\r\n              approved: approved\r\n            };\r\n            console.log(props);\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <Input\r\n                        name=\"projectName\"\r\n                        label=\"Project Name\"\r\n                        value={values.projectName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.projectName}\r\n                    />\r\n                    <Input\r\n                        name=\"projectDetails\"\r\n                        label=\"Project Details\"\r\n                        value={values.projectDetails}\r\n                        onChange={handleInputChange}\r\n                        error={errors.projectDetails}\r\n                    />\r\n                    <Input\r\n                        name=\"ownerName\"\r\n                        label=\"Owner Name\"\r\n                        value={values.ownerName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.ownerName}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  name=\"dueDate\"\r\n                  label=\"Due Date\"\r\n                  value={values.dueDate}\r\n                  onChange={handleInputChange}\r\n                  error={errors.dueDate}\r\n                />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateProjectForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerProjectForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, projectName: name, dueDate: date, projectDetails: details, companyName: createdBy, percentComplete:0, ownerName:name, enabled: \"true\", updated:update,delete:del};\r\n}\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'projectName', label: 'Project Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'projectDetails', label: 'Project Details'},\r\n    { id: 'companyName', label: 'Company Name'},\r\n    { id: 'percentComplete', label: 'Progress'},\r\n    { id: 'ownerName', label: 'Owner'},\r\n    { id: 'update', label: 'Update', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllProjects({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllCompanies({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function UP_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [allCompanies, setAllCompanies] = React.useState([]);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllCompanies(d.data);\r\n    var complist = d.data.map(function(item) {\r\n      if(item.enabled === \"true\")\r\n        return item.companyName;\r\n      else\r\n        return \"0\"\r\n    });\r\n\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n        console.log(d.data);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.companyName.includes(company) && x.enabled.includes(\"true\"));\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.projectName.toLowerCase().includes(target.value.toLowerCase()) && x.enabled.includes(\"true\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setCompany(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.companyName.includes(val.value) && x.enabled.includes(\"true\"))\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerProject(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        projectID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateProject(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Projects\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Company</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Company\"\r\n                inputProps={{\r\n                  name: 'company',\r\n                  id: 'outlined-company-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(company===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell backgroundColor = \"primary\">{row.projectName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.projectDetails}</TableCell>\r\n                <TableCell>{row.companyName}</TableCell>\r\n                <TableCell>  <CircularProgressWithLabel value={row.percentComplete} /></TableCell>\r\n                <TableCell>{row.ownerName}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Project Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Project\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} company={company} allCompanies = {allCompanies}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateProjectForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerProjectForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, projectName: name, dueDate: date, projectDetails: details, companyName: createdBy, percentComplete:0, ownerName:name, enabled: \"true\", updated:update,delete:del};\r\n}\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'projectName', label: 'Project Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'projectDetails', label: 'Project Details'},\r\n    { id: 'companyName', label: 'Company Name'},\r\n    { id: 'percentComplete', label: 'Progress'},\r\n    { id: 'ownerName', label: 'Owner'},\r\n    { id: 'enabled', label: 'Enable', disableSorting: true },\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllProjects({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllCompanies({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function AP_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [allCompanies, setAllCompanies] = React.useState([]);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllCompanies(d.data);\r\n    var complist = d.data.map(function(item) {\r\n      if(item.enabled === \"true\")\r\n        return item.companyName;\r\n      else\r\n        return \"0\"\r\n    });\r\n\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n        console.log(d.data);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items.filter(x => x.approved.includes(\"approved\"));\r\n            else\r\n                return items.filter(x => x.companyName.includes(company) && x.approved.includes(\"approved\"));\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.approved.includes(\"approved\"));\r\n            else\r\n                return items.filter(x => x.projectName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"approved\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setCompany(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items.filter(x =>  x.approved.includes(\"approved\"));\r\n            else\r\n                return items.filter(x => x.companyName.includes(val.value) && x.approved.includes(\"approved\"));\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerProject(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        projectID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateProject(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSwitch = (val, row) => {\r\n    console.log(val);\r\n      if(val== true)\r\n        changeEnable(\"true\",row._id);\r\n      if(val == false)\r\n        changeEnable(\"false\",row._id);\r\n  };\r\n\r\n  const changeEnable = (value, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        projectID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n      enabled: value\r\n      }\r\n    };\r\n\r\n\r\n    props.updateProject(input, props.history);\r\n    props.updateAllFeatures(input, props.history);\r\n    props.updateAllTasks(input, props.history);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Success.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const onDelete = project => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      projectID: project._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteProject(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Projects\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Company</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Company\"\r\n                inputProps={{\r\n                  name: 'company',\r\n                  id: 'outlined-company-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(company===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell backgroundColor = \"primary\">{row.projectName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.projectDetails}</TableCell>\r\n                <TableCell>{row.companyName}</TableCell>\r\n                <TableCell>  <CircularProgressWithLabel value={row.percentComplete} /></TableCell>\r\n                <TableCell>{row.ownerName}</TableCell>\r\n                <TableCell>\r\n                  <Switch\r\n                    onChange={(e,val)=>handleSwitch(val, row)}\r\n                    color=\"primary\"\r\n                    name=\"checked\"\r\n                    checked={(row.enabled===\"true\")}\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Project Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Project\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} company={company} allCompanies = {allCompanies}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UP_Table from \"../tables/projects/UP_Table\"\r\nimport AP_Table from \"../tables/projects/AP_Table\"\r\n\r\n\r\nconst ProjectTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AP_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UP_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default ProjectTablePicker;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n    featureDetails: '',\r\n    dueDate: '',\r\n    ownerName: ''\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    console.log(recordForEdit);\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              featureDetails: values.featureDetails,\r\n              dueDate: values.dueDate,\r\n              ownerName: values.ownerName,\r\n              approved: approved\r\n          };\r\n          props.edit(input, resetForm, props.recordForEdit._id);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"featureDetails\"\r\n                        label=\"Feature Details\"\r\n                        value={values.featureDetails}\r\n                        onChange={handleInputChange}\r\n                        error={errors.featureDetails}\r\n                    />\r\n                    <Input\r\n                        name=\"ownerName\"\r\n                        label=\"Owner Name\"\r\n                        value={values.ownerName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.ownerName}\r\n                    />\r\n                    <Input\r\n                      id=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue=\"2017-05-24\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dueDate\"\r\n                      label=\"Due Date\"\r\n                      value={values.dueDate}\r\n                      onChange={handleInputChange}\r\n                      error={errors.dueDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n    featureName: '',\r\n    featureDetails: '',\r\n    dueDate: '',\r\n    ownerName: ''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    var i;\r\n    var projectDetails = {};\r\n    for(i=0; i< props.allProjects.length; i++) {\r\n      if(props.allProjects[i].projectName === props.project)\r\n        projectDetails = props.allProjects[i];\r\n\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const input = {\r\n              projectName: projectDetails.projectName,\r\n              projectID: projectDetails._id,\r\n              creatorName: props.auth.user.name,\r\n              creatorID: props.auth.user.id,\r\n              companyName: projectDetails.companyName,\r\n              companyID: projectDetails.companyID,\r\n              ownerName: values.ownerName,\r\n              featureName: values.featureName,\r\n              featureDetails: values.featureDetails,\r\n              dueDate: values.dueDate\r\n            };\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <Input\r\n                        name=\"featureName\"\r\n                        label=\"Feature Name\"\r\n                        value={values.featureName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.featureName}\r\n                    />\r\n                    <Input\r\n                        name=\"featureDetails\"\r\n                        label=\"Feature Details\"\r\n                        value={values.featureDetails}\r\n                        onChange={handleInputChange}\r\n                        error={errors.featureDetails}\r\n                    />\r\n                    <Input\r\n                        name=\"ownerName\"\r\n                        label=\"Owner Name\"\r\n                        value={values.ownerName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.ownerName}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  name=\"dueDate\"\r\n                  label=\"Due Date\"\r\n                  value={values.dueDate}\r\n                  onChange={handleInputChange}\r\n                  error={errors.dueDate}\r\n                />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateFeatureForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerFeatureForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nfunction createData(id ,name, app, date, details, createdBy, update,del) {\r\n  return { _id:id, featureName: name, approved: app ,dueDate: date, featureDetails: details, creatorName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    green: {\r\n      main: '#1a9c34'\r\n    },\r\n    yellow: {\r\n      main: '#f5ca20'\r\n    },\r\n    yellow: {\r\n      main: '#f5ca20'\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'featureName', label: 'Feature Name' },\r\n    { id: 'approvedIcon', label: 'Approved',disableSorting: true  },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'creatorName', label: 'Creator' },\r\n    { id: 'featureDetails', label: 'Feature Details'},\r\n    { id: 'companyName', label: 'Company Name'},\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\",\"\", \"\", \"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\",\"\", \"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\",\"\", \"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllFeatures({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllProjects({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function UF_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.projectName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.projectName.includes(company))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.featureName.toLowerCase().includes(target.value))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setCompany(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.projectName.includes(val.value))\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerFeature(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_email) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        emailupdate: og_email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateFeature(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = company => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      emailDelete: company.email,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n      props.deleteFeature(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Features\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Company</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Company\"\r\n                inputProps={{\r\n                  name: 'company',\r\n                  id: 'outlined-company-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(company===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.featureName}</TableCell>\r\n                <TableCell align='center'>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.creatorName}</TableCell>\r\n                <TableCell>{row.featureDetails}</TableCell>\r\n                <TableCell>{row.companyName}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Feature Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Feature\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} company={company}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateFeatureForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerFeatureForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, featureName: name, dueDate: date, featureDetails: details, percentComplete: 0, creatorName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'featureName', label: 'Feature Name' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'ownerName', label: 'Owner' },\r\n    { id: 'featureDetails', label: 'Feature Details'},\r\n    { id: 'projectName', label: 'Project Name'},\r\n    { id: 'percentComplete', label: 'Progress'},\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllFeatures({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllProjects({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nexport default function AF_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [project, setProject] = React.useState(\"\");\r\n  const [allProjects, setAllProjects] = React.useState([]);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllProjects(d.data);\r\n    var complist = d.data.map(function(item) {\r\n      if(item.enabled === \"true\")\r\n        return item.projectName;\r\n      else\r\n        return \"0\"\r\n    });\r\n    console.log(complist);\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    var features = d.data.map(function(item) {\r\n      return ({pID: item.projectID, progress:item.percentComplete});\r\n    });\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var sum = [];\r\n    var labels = [];\r\n    for (i=0; i<features.length; i++) {\r\n      labels[i] = features[i].pID;\r\n    }\r\n    var unique = labels.filter((v, i, a) => a.indexOf(v) === i);\r\n    var projectProgress = [];\r\n    var count = 0;\r\n    for (j=0; j<unique.length; j++) {\r\n      sum[j] = 0;\r\n      count = 0;\r\n      for(k=0; k<features.length; k++){\r\n        if (features[k].pID.includes(unique[j])){\r\n          sum[j] = sum[j] + features[k].progress;\r\n          count++;\r\n        }\r\n      }\r\n      projectProgress[j] = {projectID:unique[j], percentComplete: (sum[j]/count)};\r\n    }\r\n    var input;\r\n\r\n    for(i=0; i<projectProgress.length; i++){\r\n      input = {\r\n        params: {\r\n          email: props.auth.user.email,\r\n          projectID: projectProgress[i].projectID,\r\n          auth: props.auth.isAuthenticated\r\n        },\r\n        body: {\r\n          percentComplete: projectProgress[i].percentComplete\r\n        }\r\n      };\r\n      props.updateProject(input, props.history);\r\n    }\r\n\r\n  },[notify]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    console.log(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (project == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.projectName.includes(project))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.featureName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setProject(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.projectName.includes(val.value))\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerFeature(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        featureID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateFeature(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Updated Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = feature => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      featureID: feature._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    }\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteFeature(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Features\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-project-native-simple\">Project</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Project\"\r\n                inputProps={{\r\n                  name: 'project',\r\n                  id: 'outlined-project-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(project===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell backgroundColor = \"primary\">{row.featureName}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.ownerName}</TableCell>\r\n                <TableCell>{row.featureDetails}</TableCell>\r\n                <TableCell>{row.projectName}</TableCell>\r\n                <TableCell>  <CircularProgressWithLabel value={row.percentComplete} /></TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Feature Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Feature\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} project={project} allProjects = {allProjects}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UF_Table from \"../tables/features/UF_Table\"\r\nimport AF_Table from \"../tables/features/AF_Table\"\r\n\r\n\r\nconst FeatureTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AF_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UF_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default FeatureTablePicker;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n    taskName: '',\r\n    taskDetails: '',\r\n    dueDate: '',\r\n    ownerName:'',\r\n    percentComplete:0\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    console.log(recordForEdit);\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const input = {\r\n              taskName: values.taskName,\r\n              taskDetails: values.taskDetails,\r\n              dueDate: values.dueDate,\r\n              percentComplete: parseInt(values.percentComplete),\r\n              ownerName: values.ownerName\r\n          };\r\n          console.log(input);\r\n          props.edit(input, resetForm, recordForEdit._id);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"taskName\"\r\n                        label=\"Project Name\"\r\n                        value={values.taskName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.taskName}\r\n                    />\r\n                    <Input\r\n                        name=\"taskDetails\"\r\n                        label=\"Project Details\"\r\n                        value={values.taskDetails}\r\n                        onChange={handleInputChange}\r\n                        error={errors.taskDetails}\r\n                    />\r\n                    <Input\r\n                        name=\"ownerName\"\r\n                        label=\"Owner Name\"\r\n                        value={values.ownerName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.ownerName}\r\n                    />\r\n                    <Input\r\n                        name=\"percentComplete\"\r\n                        label=\"Progress\"\r\n                        value={values.percentComplete}\r\n                        onChange={handleInputChange}\r\n                        error={errors.percentComplete}\r\n                    />\r\n                    <Input\r\n                      id=\"date\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dueDate\"\r\n                      label=\"Due Date\"\r\n                      value={values.dueDate}\r\n                      onChange={handleInputChange}\r\n                      error={errors.dueDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n    taskName: '',\r\n    taskDetails: '',\r\n    dueDate: '',\r\n    ownerName: ''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    var i;\r\n    var featureDetails = {};\r\n    for(i=0; i< props.allFeatures.length; i++) {\r\n      if(props.allFeatures[i].featureName === props.feature)\r\n        featureDetails = props.allFeatures[i];\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              taskName: values.taskName,\r\n              taskDetails: values.taskDetails,\r\n              dueDate: values.dueDate,\r\n              ownerName: values.ownerName,\r\n              creatorName: props.auth.user.name,\r\n              creatorID: props.auth.user.id,\r\n              companyName: featureDetails.companyName,\r\n              companyID: featureDetails.companyID,\r\n              projectName:featureDetails.projectName,\r\n              projectID:featureDetails.projectID,\r\n              featureName:featureDetails.featureName,\r\n              featureID:featureDetails._id,\r\n              percentComplete: values.percentComplete\r\n            };\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <Input\r\n                        name=\"taskName\"\r\n                        label=\"Task Name\"\r\n                        value={values.taskName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.taskName}\r\n                    />\r\n                    <Input\r\n                        name=\"taskDetails\"\r\n                        label=\"Task Details\"\r\n                        value={values.taskDetails}\r\n                        onChange={handleInputChange}\r\n                        error={errors.taskDetails}\r\n                    />\r\n                    <Input\r\n                        name=\"ownerName\"\r\n                        label=\"Owner Name\"\r\n                        value={values.ownerName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.ownerName}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  name=\"dueDate\"\r\n                  label=\"Due Date\"\r\n                  value={values.dueDate}\r\n                  onChange={handleInputChange}\r\n                  error={errors.dueDate}\r\n                />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateTaskForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerTaskForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nfunction createData(id ,name, app, date, details, createdBy, update,del) {\r\n  return { _id:id, taskName: name, approved: app ,dueDate: date, taskDetails: details, creatorName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    green: {\r\n      main: '#1a9c34'\r\n    },\r\n    yellow: {\r\n      main: '#f5ca20'\r\n    },\r\n    yellow: {\r\n      main: '#f5ca20'\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'taskName', label: 'Task Name' },\r\n    { id: 'approvedIcon', label: 'Approved',disableSorting: true  },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'creatorName', label: 'Creator' },\r\n    { id: 'taskDetails', label: 'Task Details'},\r\n    { id: 'companyName', label: 'Company Name'},\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\",\"\", \"\", \"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\",\"\", \"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\",\"\", \"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllTasks({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllCompanies({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function AP_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.companyName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.companyName.includes(company))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.taskName.toLowerCase().includes(target.value))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setCompany(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.companyName.includes(val.value))\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerTask(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_email) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        emailupdate: og_email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateTask(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = company => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      emailDelete: company.email,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n      props.deleteTask(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Tasks\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Company</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Company\"\r\n                inputProps={{\r\n                  name: 'company',\r\n                  id: 'outlined-company-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(company===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.taskName}</TableCell>\r\n                <TableCell align='center'>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.creatorName}</TableCell>\r\n                <TableCell>{row.taskDetails}</TableCell>\r\n                <TableCell>{row.companyName}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Task Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Task\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} company={company}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateTaskForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerTaskForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, taskName: name, dueDate: date, taskDetails: details, creatorName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'taskName', label: 'Task Name' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'ownerName', label: 'ownerName' },\r\n    { id: 'taskDetails', label: 'Task Details'},\r\n    { id: 'featureName', label: 'Feature Name'},\r\n    { id: 'percentComplete', label: 'Progress'},\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllTasks({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllFeatures({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function AT_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [allFeatures, setAllFeatures] = React.useState([]);\r\n  const [feature, setFeature] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllFeatures(d.data);\r\n    var complist = d.data.map(function(item) {\r\n      if(item.enabled === \"true\")\r\n        return item.featureName;\r\n      else\r\n        return \"0\"\r\n    });\r\n    console.log(complist);\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    var tasks = d.data.map(function(item) {\r\n      return ({fID: item.featureID, progress:item.percentComplete});\r\n    });\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var sum = [];\r\n    var labels = [];\r\n    for (i=0; i<tasks.length; i++) {\r\n      labels[i] = tasks[i].fID;\r\n    }\r\n    var unique = labels.filter((v, i, a) => a.indexOf(v) === i);\r\n    var featureProgress = [];\r\n    var count = 0;\r\n    for (j=0; j<unique.length; j++) {\r\n      sum[j] = 0;\r\n      count = 0;\r\n      for(k=0; k<tasks.length; k++){\r\n        if (tasks[k].fID.includes(unique[j])){\r\n          sum[j] = sum[j] + tasks[k].progress;\r\n          count++;\r\n        }\r\n      }\r\n      console.log(count);\r\n      featureProgress[j] = {featureID:unique[j], percentComplete: (sum[j]/count)};\r\n    }\r\n    var input;\r\n\r\n    for(i=0; i<featureProgress.length; i++){\r\n      input = {\r\n        params: {\r\n          email: props.auth.user.email,\r\n          featureID: featureProgress[i].featureID,\r\n          auth: props.auth.isAuthenticated\r\n        },\r\n        body: {\r\n          percentComplete: featureProgress[i].percentComplete\r\n        }\r\n      };\r\n      props.updateFeature(input, props.history);\r\n    }\r\n\r\n  },[notify]);\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (feature == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.featureName.includes(feature) )\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var features = d.data.map(function(item) {\r\n      return ({pID: item.projectID, progress:item.percentComplete});\r\n    });\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var sum = [];\r\n    var labels = [];\r\n    for (i=0; i<features.length; i++) {\r\n      labels[i] = features[i].pID;\r\n    }\r\n    var unique = labels.filter((v, i, a) => a.indexOf(v) === i);\r\n    var projectProgress = [];\r\n    var count = 0;\r\n    for (j=0; j<unique.length; j++) {\r\n      sum[j] = 0;\r\n      count = 0;\r\n      for(k=0; k<features.length; k++){\r\n        if (features[k].pID.includes(unique[j])){\r\n          sum[j] = sum[j] + features[k].progress;\r\n          count++;\r\n        }\r\n      }\r\n      projectProgress[j] = {projectID:unique[j], percentComplete: (sum[j]/count)};\r\n    }\r\n    var input;\r\n\r\n    for(i=0; i<projectProgress.length; i++){\r\n      input = {\r\n        params: {\r\n          email: props.auth.user.email,\r\n          projectID: projectProgress[i].projectID,\r\n          auth: props.auth.isAuthenticated\r\n        },\r\n        body: {\r\n          percentComplete: projectProgress[i].percentComplete\r\n        }\r\n      };\r\n      props.updateProject(input, props.history);\r\n    }\r\n\r\n  },[notify]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.taskName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setFeature(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items.filter(x => x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.featureName.includes(val.value) )\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerTask(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        taskID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateTask(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = task => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      taskID: task._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteTask(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Tasks\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-feature-native-simple\">Feature</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Feature\"\r\n                inputProps={{\r\n                  name: 'feature',\r\n                  id: 'outlined-feature-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(feature===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell backgroundColor = \"primary\">{row.taskName}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.ownerName}</TableCell>\r\n                <TableCell>{row.taskDetails}</TableCell>\r\n                <TableCell>{row.featureName}</TableCell>\r\n                <TableCell>  <CircularProgressWithLabel value={row.percentComplete} /></TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Task Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Task\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} feature={feature} allFeatures={allFeatures}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UT_Table from \"../tables/tasks/UT_Table\"\r\nimport AT_Table from \"../tables/tasks/AT_Table\"\r\n\r\n\r\nconst TaskTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AT_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UT_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default TaskTablePicker;\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems, secondaryListItems } from '../listitem';\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport { getAllCompanies } from \"../../../actions/companyActions\";\r\nimport { getAllProjects, deleteProject, updateProject, registerProject } from \"../../../actions/projectActions\";\r\nimport { getAllTasks, deleteTask, updateTask, registerTask ,updateAllTasks } from \"../../../actions/taskActions\";\r\nimport { getAllFeatures, deleteFeature, updateFeature, registerFeature, updateAllFeatures } from \"../../../actions/featureActions\";\r\nimport ProjectTablePicker from \"./pickers/ProjectTablePicker\"\r\nimport FeatureTablePicker from \"./pickers/FeatureTablePicker\"\r\nimport TaskTablePicker from \"./pickers/TaskTablePicker\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\nfunction onLogoutClick(e) {\r\n  e.preventDefault();\r\n  this.props.logoutUser();\r\n}\r\n\r\nconst ProjectsPage =  (props) => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  var itemList = \"\";\r\n    if (props.auth.user.role === \"user\") {\r\n      itemList = secondaryListItems;\r\n    }\r\n    else {\r\n      itemList = mainListItems;\r\n    }\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Projects\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={value} centered onChange={handleChange} aria-label=\"simple tabs example\">\r\n                  <Tab label=\"Projects\" {...a11yProps(0)} />\r\n                  <Tab label=\"Features\" {...a11yProps(1)} />\r\n                  <Tab label=\"Tasks\" {...a11yProps(2)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={value} index={0}>\r\n                <ProjectTablePicker {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <FeatureTablePicker {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <TaskTablePicker {...props}/>\r\n              </TabPanel>\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nProjectsPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateAllFeatures,updateAllTasks,logoutUser, getAllProjects, getAllCompanies, deleteProject, updateProject, registerProject,getAllFeatures, deleteFeature, updateFeature, registerFeature,getAllTasks, deleteTask, updateTask, registerTask }\r\n)(withRouter(ProjectsPage));\r\n","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport RadioGroup from \"../../../controls/RadioGroup\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\n\r\nconst roleItems = [\r\n    { id: 'user', title: 'User' },\r\n    { id: 'admin', title: 'Admin' }\r\n]\r\n\r\nconst initialFValues = {\r\n    name: '',\r\n    role: 'staff-member',\r\n    email: ''\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    console.log(recordForEdit);\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const input = {\r\n              name:values.name,\r\n              email: values.email,\r\n              role: values.role\r\n            };\r\n            console.log(input);\r\n            props.edit(input, resetForm, recordForEdit.role);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={9}>\r\n                    <Input\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        value={values.name}\r\n                        onChange={handleInputChange}\r\n                        error={errors.name}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <RadioGroup\r\n                        name=\"role\"\r\n                        label=\"Role\"\r\n                        value={values.role}\r\n                        onChange={handleInputChange}\r\n                        items={roleItems}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport RadioGroup from \"../../../controls/RadioGroup\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst roleItems = [\r\n    { id: 'user', title: 'User' },\r\n    { id: 'admin', title: 'Admin' }\r\n]\r\n\r\nconst initialFValues = {\r\n    name: '',\r\n    email: '',\r\n    role: 'user',\r\n    password: '',\r\n    password2: '',\r\n    createdByName:''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const input = {\r\n              name: values.name,\r\n              email: values.email,\r\n              role: values.role,\r\n              password: values.password,\r\n              password2: values.password2,\r\n              createdByName: props.auth.user.name\r\n            };\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={9}>\r\n                    <Input\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        value={values.name}\r\n                        onChange={handleInputChange}\r\n                        error={errors.name}\r\n                    />\r\n                    <Input\r\n                        name=\"email\"\r\n                        label=\"Email Address\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Input\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleInputChange}\r\n                        error={errors.password}\r\n                    />\r\n                    <Input\r\n                        name=\"password2\"\r\n                        label=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        value={values.password2}\r\n                        onChange={handleInputChange}\r\n                        error={errors.password2}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <RadioGroup\r\n                        name=\"role\"\r\n                        label=\"Role\"\r\n                        value={values.role}\r\n                        onChange={handleInputChange}\r\n                        items={roleItems}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ActionButton from \"../../controls/ActionButton\"\r\nimport Button from \"../../controls/Button\"\r\nimport Input from \"../../controls/Input\"\r\nimport ConfirmDialog from \"../../elements/ConfirmDialog\"\r\nimport Notification from \"../../elements/Notification\"\r\nimport Popup from \"../../elements/Popup\"\r\nimport UpdateForm from \"./Forms/UpdateForm\"\r\nimport UseTable from \"../useTable\"\r\nimport RegisterForm from \"./Forms/RegisterForm\"\r\n\r\nfunction createData(id, name, email, role, createdBy, dateCreated, actions) {\r\n  return { _id:id, name: name, email: email, role: role, createdByName: createdBy, date: dateCreated, actions:actions};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: '_id', label: 'ID' },\r\n    { id: 'name', label: 'Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'role', label: 'Role' },\r\n    { id: 'createdBy', label: 'Created By'},\r\n    { id: 'date', label: 'Creation Date'},\r\n    { id: 'actions', label: 'Actions', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\"),\r\n  createData(\"\", \"\", \"\", \"\",\"\",\".\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllUsers({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nexport default function UserTable(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n  const cdate = \".\";\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n  },[notify]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n        }\r\n    })\r\n  }\r\n\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (input, resetForm) => {\r\n    props.registerUser(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_role) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        emailupdate: data.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateUser(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = user => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      emailDelete: user.email,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteUser(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    console.log(date);\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Input\r\n            label=\"Search Employees\"\r\n            className={classes.searchInput}\r\n            InputProps={{\r\n                startAdornment: (<InputAdornment position=\"start\">\r\n                    <Search />\r\n                </InputAdornment>)\r\n            }}\r\n            onChange={handleSearch}\r\n        />\r\n        <Button\r\n            text=\"Add New\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            className={classes.newButton}\r\n            onClick={() => { setOpenRegPopup(true); }}\r\n        />\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              ( <TableRow key={row._id}>\r\n                <TableCell>{row._id}</TableCell>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.email}</TableCell>\r\n                <TableCell>{row.role}</TableCell>\r\n                <TableCell>{row.createdByName}</TableCell>\r\n                <TableCell>{dateToString(row.date)}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"primary\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                  <ActionButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit User Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New User\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems  } from '../listitem';\r\nimport { logoutUser, registerUser } from \"../../../actions/authActions\";\r\nimport { getAllUsers, deleteUser, updateUser } from \"../../../actions/userActions\";\r\nimport UsersTable from \"./UsersTable\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\nfunction onLogoutClick(e) {\r\n  e.preventDefault();\r\n  this.props.logoutUser();\r\n}\r\nconst getData = (prop) => {\r\n  return prop.getAllUsers({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nconst UsersPage =  (props) => {\r\n\r\n  var itemList = \"\";\r\n  itemList = mainListItems;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const [data, setData] = React.useState(true);\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n  },[]);\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Users\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <UsersTable {...props}/>\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nUsersPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getAllUsers, deleteUser, updateUser, registerUser }\r\n)(withRouter(UsersPage));\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/user/\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n\r\n     history.push(\"/users\")\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteUser = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/users\", {params:userData})\r\n    .then(res => history.push(\"/users\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllUsers = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/users\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const getUser = (userData, history) => {\r\n  return function (dispatch) {\r\n    console.log(userData);\r\n    return axios\r\n    .get(\"/api/user\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateVendor = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updVendor\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteVendor = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delVendor\", {params:userData})\r\n    .then(res => history.push(\"/vendors\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllVendors = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getVendors\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const registerVendor = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newVendor\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/vendors\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updatePayment = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updPayment\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateAllPayments = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updAllPayments\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\nexport const deletePayment = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delPayment\", {params:userData})\r\n    .then(res => history.push(\"/vendors\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllPayments = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getPayments\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const registerPayment = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newPayment\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/payments\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n    vendorEmail:'',\r\n    contactNo:'',\r\n    contractAmt:0,\r\n    endDate:'',\r\n    pendingAmt:0\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (validate()) {\r\n          console.log(props.recordForEdit);\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              vendorEmail:values.email,\r\n              contactNo:values.contactNo,\r\n              contractAmt:values.contractAmt,\r\n              endDate:values.endDate,\r\n              pendingAmt:values.pendingAmt,\r\n              approved: approved\r\n          };\r\n          props.edit(input, resetForm, props.recordForEdit._id);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.recordForEdit != null)\r\n            setValues({\r\n                ...props.recordForEdit\r\n            })\r\n    }, [props.recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"vendorEmail\"\r\n                        label=\"Vendor Email\"\r\n                        value={values.vendorEmail}\r\n                        onChange={handleInputChange}\r\n                        error={errors.vendorEmail}\r\n                    />\r\n                    <Input\r\n                        name=\"contactNo\"\r\n                        label=\"Contact Number\"\r\n                        value={values.contactNo}\r\n                        onChange={handleInputChange}\r\n                        error={errors.contactNo}\r\n                    />\r\n                    <Input\r\n                        name=\"contractAmt\"\r\n                        label=\"Contract Amount\"\r\n                        value={values.contractAmt}\r\n                        onChange={handleInputChange}\r\n                        error={errors.contractAmt}\r\n                    />\r\n                    <Input\r\n                        name=\"pendingAmt\"\r\n                        label=\"Pending Amount\"\r\n                        value={values.pendingAmt}\r\n                        onChange={handleInputChange}\r\n                        error={errors.pendingAmt}\r\n                    />\r\n                    <Input\r\n                      id=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue=\"2017-05-24\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"endDate\"\r\n                      label=\"End Date\"\r\n                      value={values.endDate}\r\n                      onChange={handleInputChange}\r\n                      error={errors.endDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n  vendorName:'',\r\n  vendorEmail:'',\r\n  contactNo:'',\r\n  contractAmt:0,\r\n  startDate:'',\r\n  endDate:'',\r\n  pendingAmt:0\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              vendorName:values.vendorName,\r\n              vendorEmail:values.vendorEmail,\r\n              contactNo:values.contactNo,\r\n              contractAmt:values.contractAmt,\r\n              startDate:values.startDate,\r\n              endDate:values.endDate,\r\n              pendingAmt:values.pendingAmt,\r\n              creatorName: props.auth.user.name,\r\n              creatorID: props.auth.user.id,\r\n              approved: approved\r\n            };\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit}>\r\n          <Grid container>\r\n              <Grid item xs={7}>\r\n                  <Input\r\n                      name=\"vendorName\"\r\n                      label=\"Vendor Name\"\r\n                      value={values.vendorName}\r\n                      onChange={handleInputChange}\r\n                      error={errors.vendorName}\r\n                  />\r\n                  <Input\r\n                      name=\"vendorEmail\"\r\n                      label=\"Vendor Email\"\r\n                      value={values.vendorEmail}\r\n                      onChange={handleInputChange}\r\n                      error={errors.vendorEmail}\r\n                  />\r\n                  <Input\r\n                      name=\"contactNo\"\r\n                      label=\"Contact Number\"\r\n                      value={values.contactNo}\r\n                      onChange={handleInputChange}\r\n                      error={errors.contactNo}\r\n                  />\r\n                  <Input\r\n                      name=\"contractAmt\"\r\n                      label=\"Contract Amount\"\r\n                      value={values.contractAmt}\r\n                      onChange={handleInputChange}\r\n                      error={errors.contractAmt}\r\n                  />\r\n                  <Input\r\n                      name=\"pendingAmt\"\r\n                      label=\"Pending Amount\"\r\n                      value={values.pendingAmt}\r\n                      onChange={handleInputChange}\r\n                      error={errors.pendingAmt}\r\n                  />\r\n                  <Input\r\n                    id=\"date\"\r\n                    type=\"date\"\r\n                    defaultValue=\"2017-05-24\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    name=\"startDate\"\r\n                    label=\"Start Date\"\r\n                    value={values.startDate}\r\n                    onChange={handleInputChange}\r\n                    error={errors.startDate}\r\n                  />\r\n                  <Input\r\n                    id=\"date\"\r\n                    type=\"date\"\r\n                    defaultValue=\"2017-05-24\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    name=\"endDate\"\r\n                    label=\"End Date\"\r\n                    value={values.endDate}\r\n                    onChange={handleInputChange}\r\n                    error={errors.endDate}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                  <div>\r\n                      <Button\r\n                          type=\"submit\"\r\n                          text=\"Submit\" />\r\n                      <Button\r\n                          text=\"Reset\"\r\n                          color=\"default\"\r\n                          onClick={resetForm} />\r\n                  </div>\r\n              </Grid>\r\n          </Grid>\r\n      </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateVendorForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerVendorForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport PropTypes from \"prop-types\";\r\n// Generate Order Data\r\nfunction createData() {\r\n  return {\r\n    _id:\"\",\r\n    vendorName: \"\",\r\n    vendorEmail: \"\",\r\n    contactNo: \"\",\r\n    contractAmt: 0,\r\n    startDate: \"\",\r\n    endDate:\"\",\r\n    pendingAmt:0,\r\n    creatorName: \"\",\r\n    approved: \"\"\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'vendorEmail', label: 'Email' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'endDate', label: 'End Date' },\r\n    { id: 'contractAmt', label: 'Contract Amount' },\r\n    { id: 'pendingAmt', label: 'Pending Amount'},\r\n    { id: 'contactNo', label: 'Contact No.'},\r\n    { id: 'update', label: 'Update', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function UV_Table(props) {\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n        console.log(d.data);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n  },[notify]);\r\n\r\n  console.log(data);\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.vendorName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerVendor(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        vendorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n      console.log(input);\r\n      props.updateVendor(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Updated Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n  }\r\n\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Vendors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.vendorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.vendorEmail}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.endDate)}</TableCell>\r\n                <TableCell>{row.contractAmt}</TableCell>\r\n                <TableCell>{row.pendingAmt}</TableCell>\r\n                <TableCell>{row.contactNo}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n\r\n      <Popup\r\n        title=\"Edit Vendor Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Vendor\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} />\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateVendorForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerVendorForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\n// Generate Order Data\r\nfunction createData() {\r\n  return {\r\n    _id:\"\",\r\n    vendorName: \"\",\r\n    vendorEmail: \"\",\r\n    contactNo: \"\",\r\n    contractAmt: \"\",\r\n    startDate: \"\",\r\n    endDate:\"\",\r\n    pendingAmt:'',\r\n    approved: \"\"\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'vendorEmail', label: 'Email' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'endDate', label: 'End Date' },\r\n    { id: 'contractAmt', label: 'Contract Amount' },\r\n    { id: 'pendingAmt', label: 'Pending Amount'},\r\n    { id: 'contactNo', label: 'Contact No.'},\r\n    { id: 'enabled', label: 'Enable', disableSorting: true },\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function AV_Table(props) {\r\n  console.log(rows);\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n        console.log(d.data);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n                return items.filter(x => x.approved.includes(\"approved\"))\r\n        }\r\n    })\r\n  },[notify]);\r\n\r\n  console.log(data);\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.vendorName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerVendor(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        vendorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateVendor(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSwitch = (val, row) => {\r\n    console.log(val);\r\n      if(val== true)\r\n        changeEnable(\"true\", row._id);\r\n      if(val == false)\r\n        changeEnable(\"false\", row._id);\r\n  };\r\n\r\n  const changeEnable = (value, og_id) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        vendorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n      enabled: value\r\n      }\r\n    };\r\n\r\n    const p_input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        vendorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        enabled: value\r\n      }\r\n    };\r\n    props.updateVendor(input, props.history);\r\n    props.updateAllPayments(p_input, props.history);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Success.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const onDelete = vendor => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      vendorName: vendor.vendorName,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteVendor(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Vendors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.vendorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.vendorEmail}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.endDate)}</TableCell>\r\n                <TableCell>{row.contractAmt}</TableCell>\r\n                <TableCell>{row.pendingAmt}</TableCell>\r\n                <TableCell>{row.contactNo}</TableCell>\r\n                <TableCell>\r\n                  <Switch\r\n                    onChange={(e,val)=>handleSwitch(val, row)}\r\n                    color=\"primary\"\r\n                    name=\"checked\"\r\n                    checked={(row.enabled===\"true\")}\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n\r\n      <Popup\r\n        title=\"Edit Vendor Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Vendor\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} />\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UV_Table from \"../tables/vendors/UV_Table\"\r\nimport AV_Table from \"../tables/vendors/AV_Table\"\r\n\r\n\r\nconst VendorTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AV_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UV_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default VendorTablePicker;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n  paymentName: '',\r\n  amtToBePaid: '',\r\n  dueDate: ''\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              paymentName: values.paymentName,\r\n              amtToBePaid: values.amtToBePaid,\r\n              dueDate: values.dueDate,\r\n              approved: approved\r\n          };\r\n          props.edit(input, resetForm, props.recordForEdit._id);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.recordForEdit != null)\r\n            setValues({\r\n                ...props.recordForEdit\r\n            })\r\n    }, [props.recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"paymentName\"\r\n                        label=\"Payment Name\"\r\n                        value={values.paymentName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.paymentName}\r\n                    />\r\n                    <Input\r\n                        name=\"amtToBePaid\"\r\n                        label=\"Amount to Pay\"\r\n                        value={values.amtToBePaid}\r\n                        onChange={handleInputChange}\r\n                        error={errors.amtToBePaid}\r\n                    />\r\n                    <Input\r\n                      id=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue=\"2017-05-24\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dueDate\"\r\n                      label=\"Due Date\"\r\n                      value={values.dueDate}\r\n                      onChange={handleInputChange}\r\n                      error={errors.dueDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n  paymentName: '',\r\n  amtToBePaid: '',\r\n  dueDate: ''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    var i;\r\n    var vendorDetails = {};\r\n    for(i=0; i< props.allVendors.length; i++) {\r\n      if(props.allVendors[i].vendorName === props.vendor)\r\n        vendorDetails = props.allVendors[i];\r\n\r\n    }\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              vendorName: vendorDetails.vendorName,\r\n              vendorID: vendorDetails._id,\r\n              paymentName: values.paymentName,\r\n              amtToBePaid: values.amtToBePaid,\r\n              dueDate: values.dueDate,\r\n              creatorName: props.auth.user.name,\r\n              creatorID:props.auth.user.id,\r\n              approved:approved\r\n            };\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.recordForEdit != null)\r\n            setValues({\r\n                ...props.recordForEdit\r\n            })\r\n    }, [props.recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <Input\r\n                        name=\"paymentName\"\r\n                        label=\"Payment Name\"\r\n                        value={values.paymentName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.paymentName}\r\n                    />\r\n                    <Input\r\n                        name=\"amtToBePaid\"\r\n                        label=\"Amount to Pay\"\r\n                        value={values.amtToBePaid}\r\n                        onChange={handleInputChange}\r\n                        error={errors.amtToBePaid}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  name=\"dueDate\"\r\n                  label=\"Due Date\"\r\n                  value={values.dueDate}\r\n                  onChange={handleInputChange}\r\n                  error={errors.dueDate}\r\n                />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updatePaymentForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerPaymentForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return { _id:'',  vendorName: '', paymentName: '', amtToBePaid: '', dueDate: '', updated:'',delete:''};\r\n}\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'amtToBePaid', label: 'Amount to Pay' },\r\n    { id: 'dueDate', label: 'Due Date'},\r\n    { id: 'isPaid', label: 'Pay', disableSorting: true },\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllPayments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nexport default function AF_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [allVendors, setAllVendors] = React.useState([]);\r\n  const [list, setList] = React.useState([]);\r\n  const [vendor, setVendor] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllVendors(d.data);\r\n    var complist = d.data.map(function(item) {\r\n      if(item.enabled === \"true\" && item.approved === \"approved\")\r\n        return item.vendorName;\r\n      else\r\n        return \"0\"\r\n    });\r\n    console.log(complist);\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    console.log(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (vendor == \"\")\r\n                return items.filter(x => x.isPaid.includes(\"no\") && x.approved.includes(\"approved\")&& x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.vendorName.includes(vendor) && x.approved.includes(\"approved\") && x.isPaid.includes(\"no\")&& x.enabled.includes(\"true\"));\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.isPaid.includes(\"no\") && x.approved.includes(\"approved\") && x.enabled.includes(\"true\"));\r\n            else\r\n                return items.filter(x => x.vendorName.toLowerCase().includes(target.value.toLowerCase()) && x.isPaid.includes(\"no\") && x.approved.includes(\"approved\") && x.enabled.includes(\"true\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setVendor(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.vendorName.includes(val.value) && x.approved.includes(\"approved\")&& x.isPaid.includes(\"no\")&& x.enabled.includes(\"true\"));\r\n        }\r\n    })\r\n\r\n  };\r\n\r\n  const onPaid = paymentID => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        paymentID: paymentID,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        isPaid: \"yes\"\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updatePayment(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Return Paid\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerPayment(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        paymentID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updatePayment(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = payment => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      paymentID: payment._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    }\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deletePayment(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Payments\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-vendor-native-simple\">Vendor</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Vendor\"\r\n                inputProps={{\r\n                  name: 'vendor',\r\n                  id: 'outlined-vendor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(vendor===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell backgroundColor = \"primary\">{row.vendorName}</TableCell>\r\n                <TableCell>{row.amtToBePaid}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onPaid(row._id)}}>\r\n                    <CheckIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Popup\r\n        title=\"Edit Payment Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Payment\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} vendor={vendor} allVendors={allVendors}/>\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UPay_Table from \"../tables/payments/UPay_Table\"\r\nimport APay_Table from \"../tables/payments/APay_Table\"\r\n\r\n\r\nconst PaymentTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <APay_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UPay_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default PaymentTablePicker;\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updatePaymentForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerPaymentForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return { _id:'',  vendorName: '', paymentName: '', amtToBePaid: '', dueDate: '', updated:'',delete:''};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'amtToBePaid', label: 'Amount Paid' },\r\n    { id: 'dueDate', label: 'Due Date'},\r\n    { id: 'isPaid', label: 'Status'},\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllPayments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nexport default function AF_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [allVendors, setAllVendors] = React.useState([]);\r\n  const [list, setList] = React.useState([]);\r\n  const [vendor, setVendor] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllVendors(d.data);\r\n    var complist = d.data.map(function(item) {\r\n      if(item.approved === \"approved\")\r\n        return item.vendorName;\r\n      else\r\n        return \"0\"\r\n    });\r\n    console.log(complist);\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    console.log(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (vendor == \"\")\r\n                return items.filter(x => x.isPaid.includes(\"yes\"));\r\n            else\r\n                return items.filter(x => x.vendorName.includes(vendor) && x.approved.includes(\"approved\") && x.isPaid.includes(\"yes\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.vendorName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setVendor(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items.filter(x=>x.isPaid.includes(\"yes\"));\r\n            else\r\n                return items.filter(x => x.vendorName.includes(val.value) && x.approved.includes(\"approved\")&& x.isPaid.includes(\"yes\"))\r\n        }\r\n    })\r\n\r\n  };\r\n\r\n  const onDelete = payment => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      paymentID: payment._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    }\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deletePayment(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Payments\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-vendor-native-simple\">Vendor</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Vendor\"\r\n                inputProps={{\r\n                  name: 'vendor',\r\n                  id: 'outlined-vendor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell backgroundColor = \"primary\">{row.vendorName}</TableCell>\r\n                <TableCell>{row.amtToBePaid}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.isPaid}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UL_Table from \"../tables/logs/UL_Table\"\r\nimport AL_Table from \"../tables/logs/AL_Table\"\r\n\r\n\r\nconst LogTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AL_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UL_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default LogTablePicker;\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems, secondaryListItems } from '../listitem';\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport { getAllCompanies } from \"../../../actions/companyActions\";\r\nimport { getAllVendors, deleteVendor, updateVendor, registerVendor } from \"../../../actions/vendorActions\";\r\nimport { getAllPayments, deletePayment, updatePayment, updateAllPayments, registerPayment } from \"../../../actions/paymentActions\";\r\nimport VendorTablePicker from \"./pickers/VendorTablePicker\"\r\nimport PaymentTablePicker from \"./pickers/PaymentTablePicker\"\r\nimport LogTablePicker from \"./pickers/LogTablePicker\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\nconst VendorsPage =  (props) => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  var itemList = \"\";\r\n    if (props.auth.user.role === \"user\") {\r\n      itemList = secondaryListItems;\r\n    }\r\n    else {\r\n      itemList = mainListItems;\r\n    }\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Vendors\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={value} centered onChange={handleChange} aria-label=\"simple tabs example\">\r\n                  <Tab label=\"Vendors\" {...a11yProps(0)} />\r\n                  <Tab label=\"Payments\" {...a11yProps(1)} />\r\n                  <Tab label=\"Logs\" {...a11yProps(2)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={value} index={0}>\r\n                <VendorTablePicker {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <PaymentTablePicker {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <LogTablePicker {...props}/>\r\n              </TabPanel>\r\n\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nVendorsPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getAllVendors, deleteVendor, updateVendor, registerVendor,updateAllPayments,getAllPayments, deletePayment, updatePayment, registerPayment }\r\n)(withRouter(VendorsPage));\r\n\r\n// <TabPanel value={value} index={1}>\r\n//   <PaymentTablePicker {...props}/>\r\n// </TabPanel>\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateInvestment = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updInv\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\nexport const deleteInvestment = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delInv\", {params:userData})\r\n    .then(res => history.push(\"/investments\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllInvestments = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getInvs\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const registerInvestment = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newInv\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/investments\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateInvestor = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updInvestor\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\nexport const deleteInvestor = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delInvestor\", {params:userData})\r\n    .then(res => history.push(\"/Investments\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllInvestors = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getInvestors\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const registerInvestor = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newInvestor\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/Investors\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n  dueDate: '',\r\n  capitalPaid: ''\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    console.log(recordForEdit);\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              capitalPaid: values.capitalPaid,\r\n              dueDate: values.dueDate,\r\n              approved: approved\r\n          };\r\n          props.edit(input, resetForm, recordForEdit._id);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"capitalPaid\"\r\n                        label=\"Capital Paid\"\r\n                        value={values.capitalPaid}\r\n                        onChange={handleInputChange}\r\n                        error={errors.capitalPaid}\r\n                    />\r\n                    <Input\r\n                      id=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue=\"2017-05-24\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dueDate\"\r\n                      label=\"Due Date\"\r\n                      value={values.dueDate}\r\n                      onChange={handleInputChange}\r\n                      error={errors.dueDate}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n    investmentName: '',\r\n    startDate: '',\r\n    dueDate: '',\r\n    profitPercent: '',\r\n    capitalAmt: '',\r\n    capitalPaid: '',\r\n    investmentType: '',\r\n    paymentTerms: ''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    var i;\r\n    var investorDetails =  {};\r\n    for(i=0; i< props.allInvestors.length; i++) {\r\n      if(props.allInvestors[i].investorName === props.investor)\r\n        investorDetails = props.allInvestors[i];\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              investorName: investorDetails.investorName,\r\n              investorID: investorDetails._id,\r\n              investmentName: values.investmentName,\r\n              startDate: values.startDate,\r\n              dueDate: values.dueDate,\r\n              profitPercent: values.profitPercent,\r\n              capitalAmt: values.capitalAmt,\r\n              capitalPaid: values.capitalPaid,\r\n              investmentType: values.investmentType,\r\n              paymentTerms: values.paymentTerms,\r\n              approved: approved\r\n            };\r\n            console.log(investorDetails.investorID)\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.recordForEdit != null)\r\n            setValues({\r\n                ...props.recordForEdit\r\n            })\r\n    }, [props.recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                <Input\r\n                    name=\"investmentName\"\r\n                    label=\"Investment Name\"\r\n                    value={values.investmentName}\r\n                    onChange={handleInputChange}\r\n                    error={errors.investmentName}\r\n                />\r\n                    <Input\r\n                        name=\"profitPercent\"\r\n                        label=\"Rate\"\r\n                        value={values.profitPercent}\r\n                        onChange={handleInputChange}\r\n                        error={errors.profitPercent}\r\n                    />\r\n                    <Input\r\n                        name=\"capitalAmt\"\r\n                        label=\"Capital Amount\"\r\n                        value={values.capitalAmt}\r\n                        onChange={handleInputChange}\r\n                        error={errors.capitalAmt}\r\n                    />\r\n                    <Input\r\n                        name=\"capitalPaid\"\r\n                        label=\"Capital Paid\"\r\n                        value={values.capitalPaid}\r\n                        onChange={handleInputChange}\r\n                        error={errors.capitalPaid}\r\n                    />\r\n                    <Input\r\n                        name=\"investmentType\"\r\n                        label=\"Investment Type\"\r\n                        value={values.investmentType}\r\n                        onChange={handleInputChange}\r\n                        error={errors.investmentType}\r\n                    />\r\n                    <Input\r\n                        name=\"paymentTerms\"\r\n                        label=\"paymentTerms\"\r\n                        value={values.paymentTerms}\r\n                        onChange={handleInputChange}\r\n                        error={errors.paymentTerms}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  name=\"startDate\"\r\n                  label=\"Start Date\"\r\n                  value={values.startDate}\r\n                  onChange={handleInputChange}\r\n                  error={errors.startDate}\r\n                />\r\n                <Input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  name=\"dueDate\"\r\n                  label=\"Due Date\"\r\n                  value={values.dueDate}\r\n                  onChange={handleInputChange}\r\n                  error={errors.dueDate}\r\n                />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateInvestmentForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerInvestmentForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return {\r\n    _id:\"\",\r\n    investorName: \"\",\r\n    contactNo: \"\",\r\n    profitPercent:0,\r\n    capitalAmt: 0,\r\n    capitalPaid:0,\r\n    investmentType: \"\",\r\n    paymentTerms: \"\",\r\n    startDate: \"\",\r\n    dueDate:\"\",\r\n    pendingAmt:0,\r\n    creatorName: \"\",\r\n    approved: \"\"\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'investmentName', label: 'Investment Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'capitalAmt', label: 'Capital Amount'},\r\n    { id: 'capitalPaid', label: 'Amount Paid'},\r\n    { id: 'profitPercent', label: 'Rate'},\r\n    { id: 'investmentType', label: 'Type'},\r\n    { id: 'paymentTerms', label: 'Terms'},\r\n    { id: 'update', label: 'Update', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function AP_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [investor, setInvestor] = React.useState(\"\");\r\n  const [allInvestors, setAllInvestors] = React.useState([]);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllInvestors(d.data);\r\n    var complist = d.data.map(function(item) {\r\n        return item.investorName;\r\n    });\r\n\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.investmentName.toLowerCase().includes(target.value.toLowerCase()));\r\n        }\r\n    })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setInvestor(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.investorName.includes(val.value));\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  function monthDiff(d1, d2) {\r\n      var months;\r\n      months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n      months -= d1.getMonth();\r\n      months += d2.getMonth();\r\n      return months <= 0 ? 0 : months;\r\n  }\r\n  const createReturns = (data) => {\r\n      var date1 = new Date(data.startDate);\r\n      var date2 = new Date(data.dueDate);\r\n      var months = monthDiff(date1, date2);\r\n      console.log(months);\r\n      var divider= 0;\r\n\r\n      if (data.paymentTerms === \"monthly\")\r\n        divider = 1;\r\n      else if (data.paymentTerms === \"quarterly\")\r\n        divider = 4;\r\n      else if (data.paymentTerms === \"half-yearly\")\r\n        divider = 6;\r\n      else if (data.paymentTerms === \"yearly\")\r\n        divider = 12;\r\n\r\n\r\n      if (data.investmentType ===\"one-time\") {\r\n        const input = {\r\n          params: {\r\n            email: props.auth.user.email,\r\n            auth: props.auth.isAuthenticated\r\n          },\r\n          body: {\r\n            investorName: data.investorName,\r\n            investorID: data.investorID,\r\n            investmentName: data.investmentName,\r\n            paymentTerms: data.paymentTerms,\r\n            totalInterestAmt: ((data.profitPercent*data.capitalAmt)/100),\r\n            returnAmt: ((data.profitPercent*data.capitalAmt)/100),\r\n            localDueDate: data.dueDate,\r\n            dueDate: data.dueDate\r\n          }\r\n        }\r\n        props.registerReturn(input, props.history);\r\n      }\r\n      else {\r\n        var noOfPayments = months/divider;\r\n        var i;\r\n        var input;\r\n        for(i=1; i<=noOfPayments; i++) {\r\n          input = {\r\n            params: {\r\n              email: props.auth.user.email,\r\n              auth: props.auth.isAuthenticated\r\n            },\r\n            body: {\r\n              investorName: data.investorName,\r\n              investorID: data.investorID,\r\n              investmentName: data.investmentName,\r\n              paymentTerms: data.paymentTerms,\r\n              totalInterestAmt: ((data.profitPercent*data.capitalAmt)/100),\r\n              returnAmt: ((data.profitPercent*data.capitalAmt)/100)/noOfPayments,\r\n              localDueDate: date1.setMonth(date1.getMonth() + divider),\r\n              dueDate: data.dueDate\r\n            }\r\n          }\r\n          props.registerReturn(input, props.history);\r\n        }\r\n      }\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerInvestment(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const edit = (data, resetForm, id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investmentID: id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n\r\n    props.updateInvestment(input, props.history);\r\n    resetForm();\r\n    setRecordForEdit(null);\r\n    setOpenEditPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Update Successfully\",\r\n      type: 'success'\r\n    });\r\n\r\n  }\r\n\r\n  const handleSwitch = (val, row) => {\r\n    console.log(val);\r\n      // if(val== true)\r\n      //   changeEnable(\"true\",row.email, row.companyName);\r\n      // if(val == false)\r\n      //   changeEnable(\"false\",row.email, row.companyName);\r\n  };\r\n\r\n  const onDelete = investment => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      investmentID: investment._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteInvestment(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Investments\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Investor</InputLabel>\r\n              <Select\r\n                native\r\n                onChange={handleChange}\r\n                label=\"Investor\"\r\n                inputProps={{\r\n                  name: '// investor',\r\n                  id: 'outlined-investor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(investor===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{row.investmentName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.capitalAmt}</TableCell>\r\n                <TableCell>{row.capitalPaid}</TableCell>\r\n                <TableCell>{row.profitPercent + \"%\"}</TableCell>\r\n                <TableCell>{row.investmentType}</TableCell>\r\n                <TableCell>{row.paymentTerms}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n      <Popup\r\n        title=\"Edit Investment Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm  {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Investment\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} investor={investor} allInvestors={allInvestors} />\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateInvestmentForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerInvestmentForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return {\r\n    _id:\"\",\r\n    investorName: \"\",\r\n    contactNo: \"\",\r\n    profitPercent:0,\r\n    capitalAmt: 0,\r\n    capitalPaid:0,\r\n    investmentType: \"\",\r\n    paymentTerms: \"\",\r\n    startDate: \"\",\r\n    dueDate:\"\",\r\n    pendingAmt:0,\r\n    creatorName: \"\",\r\n    approved: \"\"\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'investmentName', label: 'Investment Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'capitalAmt', label: 'Capital Amount'},\r\n    { id: 'capitalPaid', label: 'Amount Paid'},\r\n    { id: 'profitPercent', label: 'Rate'},\r\n    { id: 'investmentType', label: 'Type'},\r\n    { id: 'paymentTerms', label: 'Terms'},\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function AP_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [investor, setInvestor] = React.useState(\"\");\r\n  const [allInvestors, setAllInvestors] = React.useState([]);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    setAllInvestors(d.data);\r\n    var complist = d.data.map(function(item) {\r\n      if (item.approved === \"approved\")\r\n        return item.investorName;\r\n      else\r\n        return \"0\"\r\n    });\r\n\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n          return items.filter(x =>  x.approved.includes(\"approved\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x =>  x.approved.includes(\"approved\"))\r\n            else\r\n                return items.filter(x => x.investmentName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"approved\"))\r\n        }\r\n    })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setInvestor(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items.filter(x => x.approved.includes(\"approved\"));\r\n            else\r\n                return items.filter(x => x.investorName.includes(val.value) && x.approved.includes(\"approved\"))\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  function monthDiff(d1, d2) {\r\n      var months;\r\n      months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n      months -= d1.getMonth();\r\n      months += d2.getMonth();\r\n      return months <= 0 ? 0 : months;\r\n  }\r\n  const createReturns = (data) => {\r\n      var date1 = new Date(data.startDate);\r\n      var date2 = new Date(data.dueDate);\r\n      var months = monthDiff(date1, date2);\r\n      console.log(months);\r\n      var divider= 0;\r\n\r\n      if (data.paymentTerms === \"monthly\")\r\n        divider = 1;\r\n      else if (data.paymentTerms === \"quarterly\")\r\n        divider = 4;\r\n      else if (data.paymentTerms === \"half-yearly\")\r\n        divider = 6;\r\n      else if (data.paymentTerms === \"yearly\")\r\n        divider = 12;\r\n\r\n\r\n      if (data.investmentType ===\"one-time\") {\r\n        const input = {\r\n          params: {\r\n            email: props.auth.user.email,\r\n            auth: props.auth.isAuthenticated\r\n          },\r\n          body: {\r\n            investorName: data.investorName,\r\n            investorID: data.investorID,\r\n            investmentName: data.investmentName,\r\n            paymentTerms: data.paymentTerms,\r\n            totalInterestAmt: ((data.profitPercent*data.capitalAmt)/100),\r\n            returnAmt: ((data.profitPercent*data.capitalAmt)/100),\r\n            localDueDate: data.dueDate,\r\n            dueDate: data.dueDate\r\n          }\r\n        }\r\n        props.registerReturn(input, props.history);\r\n      }\r\n      else {\r\n        var noOfPayments = months/divider;\r\n        var i;\r\n        var input;\r\n        for(i=1; i<=noOfPayments; i++) {\r\n          input = {\r\n            params: {\r\n              email: props.auth.user.email,\r\n              auth: props.auth.isAuthenticated\r\n            },\r\n            body: {\r\n              investorName: data.investorName,\r\n              investorID: data.investorID,\r\n              investmentName: data.investmentName,\r\n              paymentTerms: data.paymentTerms,\r\n              totalInterestAmt: ((data.profitPercent*data.capitalAmt)/100),\r\n              returnAmt: ((data.profitPercent*data.capitalAmt)/100)/noOfPayments,\r\n              localDueDate: date1.setMonth(date1.getMonth() + divider),\r\n              dueDate: data.dueDate\r\n            }\r\n          }\r\n          props.registerReturn(input, props.history);\r\n        }\r\n      }\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerInvestment(input, props.history);\r\n    createReturns(data);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const edit = (data, resetForm, id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investmentID: id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateInvestment(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSwitch = (val, row) => {\r\n    console.log(val);\r\n      // if(val== true)\r\n      //   changeEnable(\"true\",row.email, row.companyName);\r\n      // if(val == false)\r\n      //   changeEnable(\"false\",row.email, row.companyName);\r\n  };\r\n\r\n  const onDelete = investment => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      investmentID: investment._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteInvestment(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Input\r\n                label=\"Search Investments\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Investor</InputLabel>\r\n              <Select\r\n                native\r\n                onChange={handleChange}\r\n                label=\"Investor\"\r\n                inputProps={{\r\n                  name: '// investor',\r\n                  id: 'outlined-investor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n                disabled = {(investor===\"\")}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{row.investmentName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.capitalAmt}</TableCell>\r\n                <TableCell>{row.capitalPaid}</TableCell>\r\n                <TableCell>{row.profitPercent + \"%\"}</TableCell>\r\n                <TableCell>{row.investmentType}</TableCell>\r\n                <TableCell>{row.paymentTerms}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n\r\n      <Popup\r\n        title=\"Edit Investment Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm  {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Investment\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} investor={investor} allInvestors={allInvestors} />\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UI_Table from \"../tables/investments/UI_Table\"\r\nimport AI_Table from \"../tables/investments/AI_Table\"\r\n\r\n\r\nconst InvestmentTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AI_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UI_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default InvestmentTablePicker;\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UseTable from \"../../../useTable\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, returnName: name, localDueDate: date, returnDetails: details, creatorName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investmentName', label: 'Investment Name' },\r\n    { id: 'localDueDate', label: 'Next Due Date' },\r\n    { id: 'returnAmt', label: 'Next Payment Amount'},\r\n    { id: 'totalInterestAmt', label: 'Total Interest'},\r\n    { id: 'paymentTerms', label: 'Payment Terms'},\r\n    { id: 'isPaid', label: 'Paid', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllReturns({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllInvestments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nexport default function AR_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [investor, setInvestor] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.investmentName;\r\n    });\r\n    console.log(complist);\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    console.log(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (investor == \"\")\r\n                return items.filter(x => x.isPaid.includes(\"no\"));\r\n            else\r\n                return items.filter(x => x.investmentName.includes(investor) && x.isPaid.includes(\"no\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.investmentName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n\r\n  const onPaid = returnID => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        returnID: returnID,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        isPaid: \"yes\"\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateReturn(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Return Paid\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setInvestor(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (val.value == \"\")\r\n                return items.filter(x => x.isPaid.includes(\"no\"));\r\n            else\r\n                return items.filter(x => x.investmentName.includes(val.value) && x.isPaid.includes(\"no\"))\r\n        }\r\n        }\r\n    )\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const onDelete = returns => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      returnID: returns._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    }\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteReturn(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Features\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-investment-native-simple\">Investor</InputLabel>\r\n              <Select\r\n                native\r\n                onChange={handleChange}\r\n                label=\"Investment\"\r\n                inputProps={{\r\n                  name: 'investment',\r\n                  id: 'outlined-investment-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investmentName}</TableCell>\r\n                <TableCell>{dateToString(row.localDueDate)}</TableCell>\r\n                <TableCell>{row.returnAmt}</TableCell>\r\n                <TableCell>{row.totalInterestAmt}</TableCell>\r\n                <TableCell>{row.paymentTerms}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onPaid(row._id)}}>\r\n                    <CheckIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UR_Table from \"../tables/returns/UR_Table\"\r\nimport AR_Table from \"../tables/returns/AR_Table\"\r\n\r\n\r\nconst ReturnTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AR_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UR_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default ReturnTablePicker;\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UseTable from \"../../../useTable\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, investmentName: name, dueDate: date, investmentDetails: details, creatorName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investmentName', label: 'Investment Name' },\r\n    { id: 'localDueDate', label: 'Next Due Date' },\r\n    { id: 'returnAmt', label: 'Next Payment Amount'},\r\n    { id: 'totalInterestAmt', label: 'Total Interest'},\r\n    { id: 'paymentTerms', label: 'Payment Terms'},\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllReturns({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllInvestments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\n\r\nexport default function AF_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [investment, setInvestment] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.investmentName;\r\n    });\r\n    console.log(complist);\r\n    var j;\r\n    var len = 0;\r\n    var trimlist = [];\r\n    for(j=0; j<complist.length; j++) {\r\n      if(complist[j] !== \"0\"){\r\n        trimlist[len++] = complist[j];\r\n      }\r\n    }\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: trimlist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    console.log(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (investment == \"\")\r\n                return items.filter(x => x.isPaid.includes(\"yes\"));\r\n            else\r\n                return items.filter(x => x.investmentName.includes(investment) && x.isPaid.includes(\"yes\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.investmentName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    let val = event.target;\r\n    console.log(val.value);\r\n    setInvestment(val.value);\r\n    setFilterFn({\r\n        fn: items => {\r\n          if (val.value == \"\")\r\n              return items.filter(x => x.isPaid.includes(\"yes\"));\r\n          else\r\n              return items.filter(x => x.investmentName.includes(val.value) && x.isPaid.includes(\"yes\"))\r\n        }\r\n    })\r\n\r\n  };\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    console.log(input);\r\n    props.registerFeature(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n  const edit = (data, resetForm, og_investmentName) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investmentID: og_investmentName,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateReturn(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = investment => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      investmentName: investment.investmentName,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    }\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteReturn(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Features\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-project-native-simple\">Investment</InputLabel>\r\n              <Select\r\n                native\r\n                onChange={handleChange}\r\n                label=\"Project\"\r\n                inputProps={{\r\n                  name: 'project',\r\n                  id: 'outlined-project-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investmentName}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.returnAmt}</TableCell>\r\n                <TableCell>{row.totalInterestAmt}</TableCell>\r\n                <TableCell>{row.paymentTerms}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UL_Table from \"../tables/logs/UL_Table\"\r\nimport AL_Table from \"../tables/logs/AL_Table\"\r\n\r\n\r\nconst LogTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AL_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UL_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default LogTablePicker;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n  contactNo: ''\r\n}\r\n\r\nexport default function UpdateForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    console.log(recordForEdit);\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              contactNo: values.contactNo,\r\n              capitalPaid: values.capitalPaid,\r\n              dueDate: values.dueDate,\r\n              approved: approved\r\n          };\r\n          props.edit(input, resetForm, recordForEdit._id);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Input\r\n                        name=\"contactNo\"\r\n                        label=\"Contact No.\"\r\n                        value={values.contactNo}\r\n                        onChange={handleInputChange}\r\n                        error={errors.contactNo}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\n\r\nconst initialFValues = {\r\n    investorName: '',\r\n    investorEmail:'',\r\n    contactNo: ''\r\n}\r\n\r\nexport default function RegisterForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const approved = (props.auth.user.role === \"admin\")?\"approved\":\"wait\";\r\n            const input = {\r\n              investorName: values.investorName,\r\n              investorEmail: values.investorEmail,\r\n              contactNo: values.contactNo,\r\n              approved: approved\r\n            };\r\n            props.create(input, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n\r\n                    <Input\r\n                        name=\"investorName\"\r\n                        label=\"Investor Name\"\r\n                        value={values.investorName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.investorName}\r\n                    />\r\n                    <Input\r\n                        name=\"investorEmail\"\r\n                        label=\"Email Address\"\r\n                        value={values.investorEmail}\r\n                        onChange={handleInputChange}\r\n                        error={errors.investorEmail}\r\n                    />\r\n                    <Input\r\n                        name=\"contactNo\"\r\n                        label=\"Phone no.\"\r\n                        value={values.contactNo}\r\n                        onChange={handleInputChange}\r\n                        error={errors.contactNo}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateInvestorForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerInvestorForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return {\r\n    _id:\"\",\r\n    investorName: \"\",\r\n    contactNo: \"\",\r\n    approved: \"\"\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'investorEmail', label: 'Email'},\r\n    { id: 'contactNo', label: 'Contact No.' },\r\n    { id: 'update', label: 'Update', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function UInv_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n  },[notify]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.investorName.toLowerCase().includes(target.value.toLowerCase()));\r\n        }\r\n    })\r\n  }\r\n\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    props.registerInvestor(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const edit = (data, resetForm, id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investorID: id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    props.updateInvestor(input, props.history);\r\n    resetForm();\r\n    setRecordForEdit(null);\r\n    setOpenEditPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Update Successfully\",\r\n      type: 'success'\r\n    });\r\n\r\n  }\r\n\r\n  const onDelete = investor => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      investorID: investor._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    props.deleteInvestor(input, props.history);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Deleted Successfully\",\r\n      type: 'success'\r\n    });\r\n\r\n\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Investors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.investorEmail}</TableCell>\r\n                <TableCell>{row.contactNo}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n\r\n      <Popup\r\n        title=\"Edit Investor Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm  {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Investor\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} />\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../../controls/ActionButton\"\r\nimport Button from \"../../../../controls/Button\"\r\nimport Input from \"../../../../controls/Input\"\r\nimport ConfirmDialog from \"../../../../elements/ConfirmDialog\"\r\nimport Notification from \"../../../../elements/Notification\"\r\nimport Popup from \"../../../../elements/Popup\"\r\nimport UpdateForm from \"../../forms/updateInvestorForm\"\r\nimport UseTable from \"../../../useTable\"\r\nimport RegisterForm from \"../../forms/registerInvestorForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from \"prop-types\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return {\r\n    _id:\"\",\r\n    investorName: \"\",\r\n    contactNo: \"\",\r\n    approved: \"\"\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'investorEmail', label: 'Email'},\r\n    { id: 'contactNo', label: 'Contact No.' },\r\n    { id: 'update', label: 'Update', disableSorting: true },\r\n    { id: 'delete', label: 'Delete', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function AInv_Table(props) {\r\n\r\n  const [confirmDialog, setConfirmDialog] = React.useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n          return items.filter(x =>  x.approved.includes(\"approved\"));\r\n        }\r\n    })\r\n  },[notify]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x =>  x.approved.includes(\"approved\"));\r\n            else\r\n                return items.filter(x => x.investorName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"approved\"));\r\n        }\r\n    })\r\n  }\r\n\r\n  const openInEditPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenEditPopup(true);\r\n  }\r\n\r\n  const openInRegPopup = item => {\r\n\r\n    setOpenRegPopup(true);\r\n  }\r\n\r\n  const create = (data, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n    props.registerInvestor(input, props.history);\r\n    resetForm();\r\n    setOpenRegPopup(false);\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Registered Successfully.\",\r\n      type: 'success'\r\n    });\r\n  }\r\n\r\n  const edit = (data, resetForm, id) => {\r\n\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investorID: id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: data\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateInvestor(input, props.history);\r\n      resetForm();\r\n      setRecordForEdit(null);\r\n      setOpenEditPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Update Successfully\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDelete = investor => {\r\n    setConfirmDialog({\r\n        ...confirmDialog,\r\n        isOpen: false\r\n    })\r\n\r\n    const input = {\r\n      investorID: investor._id,\r\n      email: props.auth.user.email,\r\n      auth: props.auth.isAuthenticated\r\n    };\r\n\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.deleteInvestor(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Deleted Successfully\",\r\n        type: 'success'\r\n      });\r\n\r\n    }\r\n  }\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Investors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n                text=\"Add New\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n                className={classes.newButton}\r\n                onClick={() => { setOpenRegPopup(true); }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.investorEmail}</TableCell>\r\n                <TableCell>{row.contactNo}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInEditPopup(row) }}>\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: 'Are you sure to delete this record?',\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => { onDelete(row) }\r\n                      })\r\n                    }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n\r\n      <Popup\r\n        title=\"Edit Investor Details\"\r\n        openPopup={openEditPopup}\r\n        setOpenPopup={setOpenEditPopup}\r\n      >\r\n        <UpdateForm  {...props}\r\n            recordForEdit={recordForEdit}\r\n            edit={edit} />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Register New Investor\"\r\n        openPopup={openRegPopup}\r\n        setOpenPopup={setOpenRegPopup}\r\n      >\r\n        <RegisterForm {...props} create={create} />\r\n      </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UInv_Table from \"../tables/investors/UInv_Table\"\r\nimport AInv_Table from \"../tables/investors/AInv_Table\"\r\n\r\n\r\nconst InvestorTablePicker = (props) => {\r\n  const user = props.auth.user;\r\n\r\n  if (user.role === \"admin\"){\r\n    console.log(\"admin\");\r\n    return(\r\n      <AInv_Table {...props}/>\r\n    );\r\n  }\r\n  if (user.role === \"user\"){\r\n    console.log(\"user\");\r\n    return(\r\n      <UInv_Table {...props}/>\r\n    );\r\n  }\r\n}\r\nexport default InvestorTablePicker;\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems, secondaryListItems } from '../listitem';\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport { getAllCompanies } from \"../../../actions/companyActions\";\r\nimport { getAllInvestments, deleteInvestment, updateInvestment, registerInvestment } from \"../../../actions/investmentActions\";\r\nimport { getAllInvestors, deleteInvestor, updateInvestor, registerInvestor } from \"../../../actions/investorActions\";\r\nimport { getAllReturns, deleteReturn, updateReturn, registerReturn } from \"../../../actions/returnActions\";\r\nimport InvestmentTablePicker from \"./pickers/InvestmentTablePicker\"\r\nimport ReturnTablePicker from \"./pickers/ReturnTablePicker\"\r\nimport LogTablePicker from \"./pickers/LogTablePicker\"\r\nimport InvestorTablePicker from \"./pickers/InvestorTablePicker\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\n\r\nconst InvestmentsPage =  (props) => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  var itemList = \"\";\r\n  if (props.auth.user.role === \"user\") {\r\n    itemList = secondaryListItems;\r\n  }\r\n  else {\r\n    itemList = mainListItems;\r\n  }\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Investments\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={value} centered onChange={handleChange} aria-label=\"simple tabs example\">\r\n                  <Tab label=\"Investors\" {...a11yProps(0)} />\r\n                  <Tab label=\"Investments\" {...a11yProps(1)} />\r\n                  <Tab label=\"Returns\" {...a11yProps(2)} />\r\n                  <Tab label=\"Log\" {...a11yProps(3)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={value} index={0}>\r\n                <InvestorTablePicker {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <InvestmentTablePicker {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <ReturnTablePicker {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <LogTablePicker {...props}/>\r\n              </TabPanel>\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nInvestmentsPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getAllInvestments,getAllInvestors, deleteInvestor, updateInvestor, registerInvestor, deleteInvestment, updateInvestment, registerInvestment,getAllReturns, deleteReturn, updateReturn, registerReturn  }\r\n)(withRouter(InvestmentsPage));\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n GET_ERRORS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport var ud = {};\r\nexport const get_all = data => {\r\n  return data;\r\n};\r\n\r\nexport const updateReturn = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/updReturn\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(\"updated\");\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\nexport const deleteReturn = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .delete(\"/api/delReturn\", {params:userData})\r\n    .then(res => history.push(\"/returns\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const getAllReturns = (userData, history) => {\r\n  return function (dispatch) {\r\n    return axios\r\n    .get(\"/api/getReturns\", {params:userData})\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const registerReturn = (userData, history) => dispatch => {\r\n  console.log(userData);\r\n  axios\r\n    .post(\"/api/newReturn\", userData.body, {params:userData.params})\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //history.push(\"/returns\"\r\n}) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n//\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Button from \"../../../controls/Button\";\r\nimport Input from \"../../../controls/Input\";\r\nimport { useForm, Form } from '../../useForm';\r\n\r\nconst initialFValues = {\r\n    rejectReason: ''\r\n}\r\n\r\nexport default function RejectForm(props) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            props.reject(props.recordForReject._id, values.rejectReason, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.recordForReject != null)\r\n            setValues({\r\n                ...props.recordForReject\r\n            })\r\n    }, [props.recordForReject])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={7}>\r\n                    <Input\r\n                        name=\"rejectReason\"\r\n                        label=\"Reason for Rejection\"\r\n                        value={values.rejectReason}\r\n                        onChange={handleInputChange}\r\n                        error={errors.rejectReason}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport RejectForm from \"../forms/rejectForm\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport UseTable from \"../../useTable\"\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, projectName: name, dueDate: date, projectDetails: details, ownerName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'projectName', label: 'Project Name' },\r\n    { id: 'approved', label: 'Approved'},\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'ownerName', label: 'Owner' },\r\n    { id: 'taskDetails', label: 'Task Details'},\r\n    { id: 'companyName', label: 'Company Name'},\r\n    { id: 'approve', label: 'Approve', disableSorting: true },\r\n    { id: 'reject', label: 'Reject', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllProjects({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllCompanies({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function ProjectApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.companyName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.companyName.includes(company) && x.approved.includes(\"wait\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.taskName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"wait\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n      let val = event.target;\r\n      console.log(val.value);\r\n      setCompany(val.value);\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (val.value == \"\")\r\n                  return items.filter(x => x.approved.includes(\"wait\"));\r\n              else\r\n                  return items.filter(x => x.companyName.includes(val.value) && x.approved.includes(\"wait\"))\r\n          }\r\n      })\r\n      };\r\n\r\n  const onApprove = og_id => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        projectID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"approved\"\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateProject(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Project Approved.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const openInRejectPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenRejectPopup(true);\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const onReject = (og_id, reason, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        projectID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"rejected\",\r\n        rejectReason: reason\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateProject(input, props.history);\r\n      resetForm();\r\n      setOpenRejectPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Payment Rejected.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Projects\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Company</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Company\"\r\n                inputProps={{\r\n                  name: 'company',\r\n                  id: 'outlined-company-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.projectName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.ownerName}</TableCell>\r\n                <TableCell>{row.projectDetails}</TableCell>\r\n                <TableCell>{row.companyName}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onApprove(row._id)}}>\r\n                    <CheckIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onReject(row)}}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    <Popup\r\n      title=\"Reject Project\"\r\n      openPopup={openRejectPopup}\r\n      setOpenPopup={setOpenRejectPopup}\r\n    >\r\n      <RejectForm\r\n          recordForReject={recordForEdit}\r\n          reject={onReject} />\r\n    </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport UseTable from \"../../useTable\"\r\nimport RejectForm from \"../forms/rejectForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return { _id:\"\", investorName: \"\", contactNo: \"\", investorEmail: \"\", approved:\"\", updated:\"\",delete:\"\"};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'contactNo', label: 'Contact No.' },\r\n    { id: 'investorEmail', label: 'Email Address' },\r\n    { id: 'approve', label: 'Approve', disableSorting: true },\r\n    { id: 'reject', label: 'Reject', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function InvestorApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  const openInRejectPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenRejectPopup(true);\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            return items.filter(x =>  x.approved.includes(\"wait\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.investorName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const onApprove = og_id => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"approved\",\r\n        rejectReason: \"\"\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateInvestor(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Investor Approved.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onReject = (og_id, reason, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"rejected\",\r\n        rejectReason: reason\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateInvestor(input, props.history);\r\n      resetForm();\r\n      setOpenRejectPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Investor Rejected.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    console.log(date);\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Input\r\n                label=\"Search Investors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.contactNo}</TableCell>\r\n                <TableCell>{row.investorEmail}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onApprove(row._id)}}>\r\n                    <CheckIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInRejectPopup(row) }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    <Popup\r\n      title=\"Reject Investor\"\r\n      openPopup={openRejectPopup}\r\n      setOpenPopup={setOpenRejectPopup}\r\n    >\r\n      <RejectForm\r\n          recordForReject={recordForEdit}\r\n          reject={onReject} />\r\n    </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport RejectForm from \"../forms/rejectForm\"\r\nimport UseTable from \"../../useTable\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, investorName: name, startDate: \"\", dueDate: \"\", amtToBePaid: details, approved: \"\", updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'investmentName', label: 'Investment Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'capitalAmt', label: 'Capital Amount'},\r\n    { id: 'capitalPaid', label: 'Amount Paid'},\r\n    { id: 'profitPercent', label: 'Rate'},\r\n    { id: 'investmentType', label: 'Type'},\r\n    { id: 'paymentTerms', label: 'Terms'},\r\n    { id: 'approve', label: 'Approve', disableSorting: true },\r\n    { id: 'reject', label: 'Reject', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function InvestmentApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [investor, setInvestor] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.investorName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (investor == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.investorName.includes(investor) && x.approved.includes(\"wait\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (investor == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.investmentName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"wait\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n    const openInRejectPopup = item => {\r\n      setRecordForEdit(item);\r\n      setOpenRejectPopup(true);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      let val = event.target;\r\n      console.log(val.value);\r\n      setInvestor(val.value);\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (val.value == \"\")\r\n                  return items.filter(x => x.approved.includes(\"wait\"))\r\n              else\r\n                  return items.filter(x => x.investorName.includes(val.value) && x.approved.includes(\"wait\"))\r\n          }\r\n      })\r\n      };\r\n\r\n  const onApprove = og_id => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investmenttID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"approved\"\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateInvestment(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Investment Approved.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onReject = (og_id, reason, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        investmentID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"rejected\",\r\n        rejectReason: reason\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateInvestment(input, props.history);\r\n      resetForm();\r\n      setOpenRejectPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Investor Rejected.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Investments\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-investor-native-simple\">Investor</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Investor\"\r\n                inputProps={{\r\n                  name: 'investor',\r\n                  id: 'outlined-investor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{row.investmentName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.capitalAmt}</TableCell>\r\n                <TableCell>{row.capitalPaid}</TableCell>\r\n                <TableCell>{row.profitPercent + \"%\"}</TableCell>\r\n                <TableCell>{row.investmentType}</TableCell>\r\n                <TableCell>{row.paymentTerms}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onApprove(row._id)}}>\r\n                    <CheckIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInRejectPopup(row) }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    <Popup\r\n      title=\"Reject Investor\"\r\n      openPopup={openRejectPopup}\r\n      setOpenPopup={setOpenRejectPopup}\r\n    >\r\n      <RejectForm\r\n          recordForReject={recordForEdit}\r\n          reject={onReject} />\r\n    </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport UseTable from \"../../useTable\"\r\nimport RejectForm from \"../forms/rejectForm\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return { _id:\"\", vendorName: \"\", endDate: \"ttt\", startDate: \"uyyy\", contractAmt: \"\", updated:\"\",delete:\"\"};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'contractAmt', label: 'Contract Amount'},\r\n    { id: 'approve', label: 'Approve', disableSorting: true },\r\n    { id: 'reject', label: 'Reject', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function VendorApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  const openInRejectPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenRejectPopup(true);\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            return items.filter(x =>  x.approved.includes(\"wait\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.vendorName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const onApprove = og_id => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        vendorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"approved\",\r\n        rejectReason: \"\"\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateVendor(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Vendor Approved.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onReject = (og_id, reason, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        vendorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"rejected\",\r\n        rejectReason: reason\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateVendor(input, props.history);\r\n      resetForm();\r\n      setOpenRejectPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Vendor Rejected.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    console.log(date);\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Input\r\n                label=\"Search Vendors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.vendorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.endDate)}</TableCell>\r\n                <TableCell>{row.contractAmt}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onApprove(row._id)}}>\r\n                    <CheckIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInRejectPopup(row) }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    <Popup\r\n      title=\"Edit Company Details\"\r\n      openPopup={openRejectPopup}\r\n      setOpenPopup={setOpenRejectPopup}\r\n    >\r\n      <RejectForm\r\n          recordForReject={recordForEdit}\r\n          reject={onReject} />\r\n    </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport RejectForm from \"../forms/rejectForm\"\r\nimport UseTable from \"../../useTable\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, vendorName: name, dueDate: date, amtToBePaid: details, approved: \"\", updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'personName', label: 'Approved' },\r\n    { id: 'amtToBePaid', label: 'Payment Amt.' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'approve', label: 'Approve', disableSorting: true },\r\n    { id: 'reject', label: 'Reject', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllPayments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function PaymentApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [vendor, setVendor] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.vendorName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (vendor == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.vendorName.includes(vendor) && x.approved.includes(\"wait\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (vendor == \"\")\r\n                return items.filter(x => x.approved.includes(\"wait\"));\r\n            else\r\n                return items.filter(x => x.taskName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"wait\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n    const openInRejectPopup = item => {\r\n      setRecordForEdit(item);\r\n      setOpenRejectPopup(true);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      let val = event.target;\r\n      console.log(val.value);\r\n      setVendor(val.value);\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (val.value == \"\")\r\n                  return items.filter(x => x.approved.includes(\"wait\"))\r\n              else\r\n                  return items.filter(x => x.vendorName.includes(val.value) && x.approved.includes(\"wait\"))\r\n          }\r\n      })\r\n      };\r\n\r\n  const onApprove = og_projectName => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        projectName: og_projectName,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"approved\"\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updateProject(input, props.history);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Project Approved.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const onReject = (og_id, reason, resetForm) => {\r\n    const input = {\r\n      params: {\r\n        email: props.auth.user.email,\r\n        vendorID: og_id,\r\n        auth: props.auth.isAuthenticated\r\n      },\r\n      body: {\r\n        approved: \"rejected\",\r\n        rejectReason: reason\r\n      }\r\n    };\r\n\r\n    if(props.auth.user.role === \"admin\"){\r\n      props.updatePayment(input, props.history);\r\n      resetForm();\r\n      setOpenRejectPopup(false);\r\n      setNotify({\r\n        isOpen: true,\r\n        message: \"Payment Rejected.\",\r\n        type: 'success'\r\n      });\r\n    }\r\n  }\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Projects\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-vendor-native-simple\">Vendor</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Vendor\"\r\n                inputProps={{\r\n                  name: 'vendor',\r\n                  id: 'outlined-vendor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.vendorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.projectDetails}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => {onApprove(row._id)}}>\r\n                    <CheckIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    color=\"light\"\r\n                    onClick={() => { openInRejectPopup(row) }}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    <Popup\r\n      title=\"Reject Investor\"\r\n      openPopup={openRejectPopup}\r\n      setOpenPopup={setOpenRejectPopup}\r\n    >\r\n      <RejectForm\r\n          recordForReject={recordForEdit}\r\n          reject={onReject} />\r\n    </Popup>\r\n      <Notification\r\n               notify={notify}\r\n               setNotify={setNotify}\r\n           />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems, secondaryListItems } from '../listitem';\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport { getAllCompanies } from \"../../../actions/companyActions\";\r\nimport { getAllProjects, deleteProject, updateProject, registerProject } from \"../../../actions/projectActions\";\r\nimport { getAllVendors, deleteVendor, updateVendor, registerVendor } from \"../../../actions/vendorActions\";\r\nimport { getAllPayments, deletePayment, updatePayment, registerPayment } from \"../../../actions/paymentActions\";\r\nimport { getAllInvestments, deleteInvestment, updateInvestment, registerInvestment } from \"../../../actions/investmentActions\";\r\nimport { getAllInvestors, deleteInvestor, updateInvestor, registerInvestor } from \"../../../actions/investorActions\";\r\nimport ProjectApprovalTable from \"./tables/ProjectApprovalTable\"\r\nimport InvestorApprovalTable from \"./tables/InvestorApprovalTable\"\r\nimport InvestmentApprovalTable from \"./tables/InvestmentApprovalTable\"\r\nimport VendorApprovalTable from \"./tables/VendorApprovalTable\"\r\nimport PaymentApprovalTable from \"./tables/PaymentApprovalTable\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\nfunction onLogoutClick(e) {\r\n  e.preventDefault();\r\n  this.props.logoutUser();\r\n}\r\n\r\nconst ApprovalPage =  (props) => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  var itemList = \"\";\r\n    if (props.auth.user.role === \"user\") {\r\n      itemList = secondaryListItems;\r\n    }\r\n    else {\r\n      itemList = mainListItems;\r\n    }\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Approval\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={value} centered onChange={handleChange} aria-label=\"simple tabs example\">\r\n                  <Tab label=\"Projects\" {...a11yProps(0)} />\r\n                  <Tab label=\"Investors\" {...a11yProps(1)} />\r\n                  <Tab label=\"Investments\" {...a11yProps(2)} />\r\n                  <Tab label=\"Vendors\" {...a11yProps(3)} />\r\n                  <Tab label=\"Payments\" {...a11yProps(4)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={value} index={0}>\r\n                <ProjectApprovalTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <InvestorApprovalTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <InvestmentApprovalTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <VendorApprovalTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={4}>\r\n                <PaymentApprovalTable {...props}/>\r\n              </TabPanel>\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nApprovalPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n    { getAllInvestments, deleteInvestment, updateInvestment, registerInvestment, logoutUser, getAllPayments, deletePayment, updatePayment, registerPayment, getAllInvestors, deleteInvestor, updateInvestor, registerInvestor, getAllProjects, getAllCompanies, deleteProject, updateProject, registerProject, getAllVendors, deleteVendor, updateVendor, registerVendor}\r\n)(withRouter(ApprovalPage));\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport UseTable from \"../../useTable\"\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, taskName: name, dueDate: date, taskDetails: details, ownerName: createdBy, updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'projectName', label: 'Project Name' },\r\n    { id: 'approved', label: 'Approved'},\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'ownerName', label: 'Owner' },\r\n    { id: 'taskDetails', label: 'Task Details'},\r\n    { id: 'companyName', label: 'Company Name'},\r\n    { id: 'rejectReason', label: 'Reject Reason' }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllProjects({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllCompanies({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function ProjectApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openEditPopup, setOpenEditPopup] = React.useState(false);\r\n  const [openRegPopup, setOpenRegPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.companyName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.companyName.includes(company) && x.approved.includes(\"rejected\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (company == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.taskName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"rejected\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n      let val = event.target;\r\n      console.log(val.value);\r\n      setCompany(val.value);\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (val.value == \"\")\r\n                  return items.filter(x => x.approved.includes(\"rejected\"));\r\n              else\r\n                  return items.filter(x => x.companyName.includes(val.value) && x.approved.includes(\"rejected\"))\r\n          }\r\n      })\r\n      };\r\n\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Projects\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-company-native-simple\">Company</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Company\"\r\n                inputProps={{\r\n                  name: 'company',\r\n                  id: 'outlined-company-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.projectName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.ownerName}</TableCell>\r\n                <TableCell>{row.projectDetails}</TableCell>\r\n                <TableCell>{row.companyName}</TableCell>\r\n                <TableCell>{row.rejectReason}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport UseTable from \"../../useTable\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return { _id:\"\", investorName: \"\", contactNo: \"\", investorEmail: \"\", approved:\"\", updated:\"\",delete:\"\"};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'contactNo', label: 'Contact No.' },\r\n    { id: 'investorEmail', label: 'Email Address' },\r\n    { id: 'rejectReason', label: 'Reject Reason', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function InvestorApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [company, setCompany] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  const openInRejectPopup = item => {\r\n    setRecordForEdit(item);\r\n    setOpenRejectPopup(true);\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            return items.filter(x =>  x.approved.includes(\"rejected\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.investorName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"rejected\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n  const dateToString = (date) => {\r\n    console.log(date);\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Input\r\n                label=\"Search Investors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.contactNo}</TableCell>\r\n                <TableCell>{row.investorEmail}</TableCell>\r\n                <TableCell>{row.rejectReason}</TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport UseTable from \"../../useTable\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, investorName: name, startDate: \"\", dueDate: \"\", amtToBePaid: details, approved: \"\", updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'investorName', label: 'Investor Name' },\r\n    { id: 'investmentName', label: 'Investment Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'capitalAmt', label: 'Capital Amount'},\r\n    { id: 'capitalPaid', label: 'Amount Paid'},\r\n    { id: 'profitPercent', label: 'Rate'},\r\n    { id: 'investmentType', label: 'Type'},\r\n    { id: 'paymentTerms', label: 'Terms'},\r\n    { id: 'rejectReason', label: 'Reject Reason'}\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllInvestments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllInvestors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function InvestmentApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [investor, setInvestor] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.investorName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (investor == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.investorName.includes(investor) && x.approved.includes(\"rejected\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (investor == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.investmentName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"rejected\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n\r\n    const handleChange = (event) => {\r\n      let val = event.target;\r\n      console.log(val.value);\r\n      setInvestor(val.value);\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (val.value == \"\")\r\n                  return items.filter(x => x.approved.includes(\"rejected\"))\r\n              else\r\n                  return items.filter(x => x.investorName.includes(val.value) && x.approved.includes(\"rejected\"))\r\n          }\r\n      })\r\n      };\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Investments\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-investor-native-simple\">Investor</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Investor\"\r\n                inputProps={{\r\n                  name: 'investor',\r\n                  id: 'outlined-investor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.investorName}</TableCell>\r\n                <TableCell>{row.investmentName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.capitalAmt}</TableCell>\r\n                <TableCell>{row.capitalPaid}</TableCell>\r\n                <TableCell>{row.profitPercent + \"%\"}</TableCell>\r\n                <TableCell>{row.investmentType}</TableCell>\r\n                <TableCell>{row.paymentTerms}</TableCell>\r\n                <TableCell>{row.rejectReason}</TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport UseTable from \"../../useTable\"\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData() {\r\n  return { _id:\"\", vendorName: \"\", endDate: \"ttt\", startDate: \"uyyy\", contractAmt: \"\", updated:\"\",delete:\"\"};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'approved', label: 'Approved' },\r\n    { id: 'startDate', label: 'Start Date' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'contractAmt', label: 'Contract Amount'},\r\n    { id: 'rejectReason', label: 'rejectReason'}\r\n];\r\n\r\nconst rows = [\r\n  createData()\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\nexport default function VendorRejectionTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const openInRejectPopup = item => {\r\n    setOpenRejectPopup(true);\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            return items.filter(x =>  x.approved.includes(\"rejected\"))\r\n        }\r\n    })\r\n  },[notify]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(data, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.vendorName.toLowerCase().includes(target.value.toLowerCase()))\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n\r\n  const dateToString = (date) => {\r\n    console.log(date);\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"wait\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Input\r\n                label=\"Search Vendors\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.vendorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{dateToString(row.startDate)}</TableCell>\r\n                <TableCell>{dateToString(row.endDate)}</TableCell>\r\n                <TableCell>{row.contractAmt}</TableCell>\r\n                <TableCell>{row.rejectReason}</TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Search} from '@material-ui/icons';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport ActionButton from \"../../../controls/ActionButton\"\r\nimport Button from \"../../../controls/Button\"\r\nimport Input from \"../../../controls/Input\"\r\nimport Notification from \"../../../elements/Notification\"\r\nimport Popup from \"../../../elements/Popup\"\r\nimport UseTable from \"../../useTable\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// Generate Order Data\r\nfunction createData(id ,name, date, details, createdBy, update,del) {\r\n  return { _id:id, vendorName: name, dueDate: date, amtToBePaid: details, approved: \"\", updated:update,delete:del};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '95%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    seeMore: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n    minWidth: 210,\r\n  },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'personName', label: 'Approved' },\r\n    { id: 'amtToBePaid', label: 'Payment Amt.' },\r\n    { id: 'dueDate', label: 'Due Date' },\r\n    { id: 'approve', label: 'Approve', disableSorting: true },\r\n    { id: 'reject', label: 'Reject', disableSorting: true }\r\n];\r\n\r\nconst rows = [\r\n  createData(\"\", \"\", \"\", \"\",\"\",\"\",\"\")\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst getData = (prop) => {\r\n  return prop.getAllPayments({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\nconst getDropdownList = (prop) => {\r\n  return prop.getAllVendors({email:prop.auth.user.email, auth:prop.auth.isAuthenticated}, prop.history);\r\n}\r\n\r\n\r\nexport default function PaymentApprovalTable(props) {\r\n\r\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' });\r\n  const [filterFn, setFilterFn] = React.useState({ fn: items => { return items; } })\r\n  const [data, setData] = React.useState(rows);\r\n  const [list, setList] = React.useState([]);\r\n  const [vendor, setVendor] = React.useState(\"\");\r\n  const [recordForEdit, setRecordForEdit] = React.useState(null);\r\n  const [openRejectPopup, setOpenRejectPopup] = React.useState(false);\r\n  const [records, setRecords] = React.useState(data);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getDropdownList(props);\r\n    var complist = d.data.map(function(item) {\r\n      return item.vendorName;\r\n    });\r\n    const len = complist.length;\r\n    var selList = [];\r\n    var i;\r\n    selList[0] = {key:0, item: \"\"};\r\n    for(i=0; i<len; i++) {\r\n      selList[i+1] = {key:i+1, item: complist[i]};\r\n    }\r\n    console.log(selList);\r\n    setList(selList);\r\n  },[]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getData(props);\r\n    setData(d.data);\r\n    setRecords(d.data);\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (vendor == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.vendorName.includes(vendor) && x.approved.includes(\"rejected\"))\r\n        }\r\n    })\r\n  },[notify, list]);\r\n\r\n\r\n  const {\r\n          TblContainer,\r\n          TblHead,\r\n          TblPagination,\r\n          recordsAfterPagingAndSorting\r\n      } = UseTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (vendor == \"\")\r\n                return items.filter(x => x.approved.includes(\"rejected\"));\r\n            else\r\n                return items.filter(x => x.taskName.toLowerCase().includes(target.value.toLowerCase()) && x.approved.includes(\"rejected\"));\r\n        }\r\n    })\r\n  }\r\n  const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n      let val = event.target;\r\n      console.log(val.value);\r\n      setVendor(val.value);\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (val.value == \"\")\r\n                  return items.filter(x => x.approved.includes(\"rejected\"))\r\n              else\r\n                  return items.filter(x => x.vendorName.includes(val.value) && x.approved.includes(\"rejected\"))\r\n          }\r\n      })\r\n      };\r\n\r\n\r\n  const dateToString = (date) => {\r\n    var d = date.toString();\r\n\r\n    d = d.substring(0, d.indexOf('T'));\r\n    return d;\r\n  }\r\n\r\n  const approvedIcon = (status) => {\r\n\r\n    if (status === \"approved\") {\r\n      console.log(status);\r\n      console.log(\"yes\");\r\n      return <CheckCircleIcon fontSize=\"small\" style={{ color: \"#00b386\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <HelpIcon fontSize=\"small\"  style={{ color: \"#ffbf00\" }}/>\r\n    }\r\n    else if (status === \"rejected\") {\r\n      console.log(\"what\");\r\n      return <CancelIcon fontSize=\"small\"  style={{ color: \"#DC143C\" }}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Paper className={classes.pageContent}>\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Input\r\n                label=\"Search Projects\"\r\n                className={classes.searchInput}\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\">\r\n                        <Search />\r\n                    </InputAdornment>)\r\n                }}\r\n                onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-vendor-native-simple\">Vendor</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                label=\"Vendor\"\r\n                inputProps={{\r\n                  name: 'vendor',\r\n                  id: 'outlined-vendor-native-simple',\r\n                }}\r\n              >{list.map(item =><option key={item.key} value={item.item}>{item.item}</option>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Toolbar>\r\n      <TblContainer>\r\n        <TblHead />\r\n          <TableBody>\r\n            {\r\n              recordsAfterPagingAndSorting().map(row =>\r\n              (<TableRow key={row._id}>\r\n                <TableCell>{row.vendorName}</TableCell>\r\n                <TableCell>{approvedIcon(row.approved)}</TableCell>\r\n                <TableCell>{row.projectDetails}</TableCell>\r\n                <TableCell>{dateToString(row.dueDate)}</TableCell>\r\n                <TableCell>{row.rejectReason}</TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TblContainer>\r\n      <TblPagination />\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems, secondaryListItems } from '../listitem';\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport { getAllCompanies } from \"../../../actions/companyActions\";\r\nimport { getAllProjects, deleteProject, updateProject, registerProject } from \"../../../actions/projectActions\";\r\nimport { getAllVendors, deleteVendor, updateVendor, registerVendor } from \"../../../actions/vendorActions\";\r\nimport { getAllPayments, deletePayment, updatePayment, registerPayment } from \"../../../actions/paymentActions\";\r\nimport { getAllInvestments, deleteInvestment, updateInvestment, registerInvestment } from \"../../../actions/investmentActions\";\r\nimport { getAllInvestors, deleteInvestor, updateInvestor, registerInvestor } from \"../../../actions/investorActions\";\r\nimport ProjectRejectionTable from \"./tables/ProjectRejectionTable\"\r\nimport InvestorRejectionTable from \"./tables/InvestorRejectionTable\"\r\nimport InvestmentRejectionTable from \"./tables/InvestmentRejectionTable\"\r\nimport VendorRejectionTable from \"./tables/VendorRejectionTable\"\r\nimport PaymentRejectionTable from \"./tables/PaymentRejectionTable\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\nfunction onLogoutClick(e) {\r\n  e.preventDefault();\r\n  this.props.logoutUser();\r\n}\r\n\r\nconst RejectionPage =  (props) => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  var itemList = \"\";\r\n    if (props.auth.user.role === \"user\") {\r\n      itemList = secondaryListItems;\r\n    }\r\n    else {\r\n      itemList = mainListItems;\r\n    }\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Rejection\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={value} centered onChange={handleChange} aria-label=\"simple tabs example\">\r\n                  <Tab label=\"Projects\" {...a11yProps(0)} />\r\n                  <Tab label=\"Investors\" {...a11yProps(1)} />\r\n                  <Tab label=\"Investments\" {...a11yProps(2)} />\r\n                  <Tab label=\"Vendors\" {...a11yProps(3)} />\r\n                  <Tab label=\"Payments\" {...a11yProps(4)} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={value} index={0}>\r\n                <ProjectRejectionTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <InvestorRejectionTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <InvestmentRejectionTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <VendorRejectionTable {...props}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={4}>\r\n                <PaymentRejectionTable {...props}/>\r\n              </TabPanel>\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nRejectionPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n    { getAllInvestments, deleteInvestment, updateInvestment, registerInvestment, logoutUser, getAllPayments, deletePayment, updatePayment, registerPayment, getAllInvestors, deleteInvestor, updateInvestor, registerInvestor, getAllProjects, getAllCompanies, deleteProject, updateProject, registerProject, getAllVendors, deleteVendor, updateVendor, registerVendor}\r\n)(withRouter(RejectionPage));\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nconst data = [\r\n  { year: '1950', population: 2.525 },\r\n  { year: '1960', population: 3.018 },\r\n  { year: '1970', population: 100 },\r\n  { year: '1980', population: 4.440 },\r\n  { year: '1990', population: 5.310 },\r\n  { year: '2000', population: 6.127 },\r\n  { year: '2010', population: 6.930 },\r\n];\r\n\r\nfunction getProjects (props) {\r\n    return props.getAllProjects({email:props.auth.user.email, auth:props.auth.isAuthenticed}, props.history)\r\n    }\r\n\r\nexport default function Graphs(props) {\r\n\r\n  const [project, setProject] = React.useState([]);\r\n\r\n  React.useEffect(async () => {\r\n    const d = await getProjects(props);\r\n    var data = d.data;\r\n    console.log(data);\r\n    var complist = d.data.map(function(item) {\r\n      return {projectName: item.projectName, percentComplete: item.percentComplete}\r\n    });\r\n    setProject(complist);\r\n  },[]);\r\n\r\n\r\n  console.log(project);\r\n  return (\r\n    <Paper>\r\n      <Chart\r\n        data={project}\r\n      >\r\n        <ArgumentAxis />\r\n        <ValueAxis max={100} />\r\n\r\n        <BarSeries\r\n          valueField=\"percentComplete\"\r\n          argumentField=\"projectName\"\r\n        />\r\n        <Title text=\"Projects\" />\r\n        <Animation />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n}\r\n","import React  from 'react';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems, secondaryListItems } from '../listitem';\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport { getAllCompanies } from \"../../../actions/companyActions\";\r\nimport { getAllProjects, deleteProject, updateProject, registerProject } from \"../../../actions/projectActions\";\r\nimport { getAllTasks, deleteTask, updateTask, registerTask ,updateAllTasks } from \"../../../actions/taskActions\";\r\nimport { getAllFeatures, deleteFeature, updateFeature, registerFeature, updateAllFeatures } from \"../../../actions/featureActions\";\r\nimport Graphs from \"./Graphs\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  btnstyle: {\r\n    margin:'8px 0',\r\n    backgroundColor: '#666bff'}\r\n}));\r\n\r\nfunction onLogoutClick(e) {\r\n  e.preventDefault();\r\n  this.props.logoutUser();\r\n}\r\n\r\nconst ProjectsPage =  (props) => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  var itemList = \"\";\r\n    if (props.auth.user.role === \"user\") {\r\n      itemList = secondaryListItems;\r\n    }\r\n    else {\r\n      itemList = mainListItems;\r\n    }\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Projects\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.btnstyle} onClick={onLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{itemList}</List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n              <Graphs {...props}/>\r\n              </Paper>\r\n            </Grid>\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nProjectsPage.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateAllFeatures,updateAllTasks,logoutUser, getAllProjects, getAllCompanies, deleteProject, updateProject, registerProject,getAllFeatures, deleteFeature, updateFeature, registerFeature,getAllTasks, deleteTask, updateTask, registerTask }\r\n)(withRouter(ProjectsPage));\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Login from \"./auth/Login\"\r\nimport Companies from \"./components/sections/companies/CompaniesPage\";\r\nimport Projects from \"./components/sections/projects/ProjectsPage\";\r\nimport Users from \"./components/sections/users/UsersPage\";\r\nimport Vendors from \"./components/sections/vendors/VendorsPage\";\r\nimport Investments from \"./components/sections/investments/InvestmentsPage\";\r\nimport Approval from \"./components/sections/approval/ApprovalPage\";\r\nimport Rejection from \"./components/sections/rejection/RejectionPage\";\r\nimport PrivateRoute from \"./privateRoute/PrivateRoute\";\r\nimport Dashboard from \"./components/sections/dashboard/DashboardPage\";\r\n\r\n\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Provider store = {store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/projects\" component={Projects} />\r\n              <PrivateRoute exact path=\"/investments\" component={Investments} />\r\n              <PrivateRoute exact path=\"/vendors\" component={Vendors} />\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute exact path=\"/companies\" component={Companies} />\r\n              <PrivateRoute exact path=\"/users\" component={Users} />\r\n              <PrivateRoute exact path=\"/approval\" component={Approval} />\r\n              <PrivateRoute exact path=\"/rejection\" component={Rejection} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}